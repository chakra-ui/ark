{
  "Basic": "import { Index, Portal } from 'solid-js/web'\nimport { Select } from '@ark-ui/solid'\n\nexport const Basic = () => {\n  const items = ['React', 'Solid', 'Vue']\n  return (\n    <Select.Root items={items}>\n      <Select.Label>Framework</Select.Label>\n      <Select.Control>\n        <Select.Trigger>\n          <Select.ValueText placeholder=\"Select a Framework\" />\n          <Select.Indicator>▼</Select.Indicator>\n        </Select.Trigger>\n        <Select.ClearTrigger>Clear</Select.ClearTrigger>\n      </Select.Control>\n      <Portal>\n        <Select.Positioner>\n          <Select.Content>\n            <Select.ItemGroup id=\"framework\">\n              <Select.ItemGroupLabel for=\"framework\">Frameworks</Select.ItemGroupLabel>\n              <Index each={items}>\n                {(item) => (\n                  <Select.Item item={item()}>\n                    <Select.ItemText>{item()}</Select.ItemText>\n                    <Select.ItemIndicator>✓</Select.ItemIndicator>\n                  </Select.Item>\n                )}\n              </Index>\n            </Select.ItemGroup>\n          </Select.Content>\n        </Select.Positioner>\n      </Portal>\n    </Select.Root>\n  )\n}\n",
  "Advanced": "import { Index, Portal } from 'solid-js/web'\nimport { Select } from '@ark-ui/solid'\n\ninterface Item {\n  label: string\n  value: string\n  disabled?: boolean\n}\n\nexport const Advanced = () => {\n  const items: Item[] = [\n    { label: 'React', value: 'react' },\n    { label: 'Solid', value: 'solid' },\n    { label: 'Vue', value: 'vue' },\n    { label: 'Svelte', value: 'svelte', disabled: true },\n  ]\n  return (\n    <Select.Root items={items}>\n      <Select.Label>Framework</Select.Label>\n      <Select.Control>\n        <Select.Trigger>\n          <Select.ValueText placeholder=\"Select a Framework\" />\n        </Select.Trigger>\n        <Select.ClearTrigger>Clear</Select.ClearTrigger>\n      </Select.Control>\n      <Portal>\n        <Select.Positioner>\n          <Select.Content>\n            <Select.ItemGroup id=\"framework\">\n              <Select.ItemGroupLabel for=\"framework\">Frameworks</Select.ItemGroupLabel>\n              <Index each={items}>\n                {(item) => (\n                  <Select.Item item={item()}>\n                    <Select.ItemText>{item().label}</Select.ItemText>\n                    <Select.ItemIndicator>✓</Select.ItemIndicator>\n                  </Select.Item>\n                )}\n              </Index>\n            </Select.ItemGroup>\n          </Select.Content>\n        </Select.Positioner>\n      </Portal>\n    </Select.Root>\n  )\n}\n",
  "Multiple": "import { Index, Portal } from 'solid-js/web'\nimport { Select } from '@ark-ui/solid'\n\nexport const Multiple = () => {\n  const items = [\n    { label: 'React', value: 'react' },\n    { label: 'Solid', value: 'solid' },\n    { label: 'Vue', value: 'vue' },\n    { label: 'Svelte', value: 'svelte', disabled: true },\n  ]\n  return (\n    <Select.Root items={items} multiple>\n      <Select.Label>Framework</Select.Label>\n      <Select.Control>\n        <Select.Trigger>\n          <Select.ValueText placeholder=\"Select a Framework\" />\n        </Select.Trigger>\n        <Select.ClearTrigger>Clear</Select.ClearTrigger>\n      </Select.Control>\n      <Portal>\n        <Select.Positioner>\n          <Select.Content>\n            <Select.ItemGroup id=\"framework\">\n              <Index each={items}>\n                {(item) => (\n                  <Select.Item item={item()}>\n                    <Select.ItemText>{item().label}</Select.ItemText>\n                    <Select.ItemIndicator>✓</Select.ItemIndicator>\n                  </Select.Item>\n                )}\n              </Index>\n            </Select.ItemGroup>\n          </Select.Content>\n        </Select.Positioner>\n      </Portal>\n    </Select.Root>\n  )\n}\n",
  "Controlled": "import { createSignal } from 'solid-js'\nimport { Index, Portal } from 'solid-js/web'\nimport { Select } from '@ark-ui/solid'\n\ninterface Item {\n  label: string\n  value: string\n  disabled?: boolean\n}\n\nexport const Controlled = () => {\n  const [, setSelectedItems] = createSignal<Item[]>([])\n\n  const items: Item[] = [\n    { label: 'React', value: 'react' },\n    { label: 'Solid', value: 'solid' },\n    { label: 'Vue', value: 'vue' },\n    { label: 'Svelte', value: 'svelte', disabled: true },\n  ]\n\n  return (\n    <Select.Root items={items} onValueChange={(e) => setSelectedItems(e.items)}>\n      <Select.Label>Framework</Select.Label>\n      <Select.Control>\n        <Select.Trigger>\n          <Select.ValueText placeholder=\"Select a Framework\" />\n        </Select.Trigger>\n        <Select.ClearTrigger>Clear</Select.ClearTrigger>\n      </Select.Control>\n      <Portal>\n        <Select.Positioner>\n          <Select.Content>\n            <Select.ItemGroup id=\"framework\">\n              <Select.ItemGroupLabel for=\"framework\">Frameworks</Select.ItemGroupLabel>\n              <Index each={items}>\n                {(item) => (\n                  <Select.Item item={item()}>\n                    <Select.ItemText>{item().label}</Select.ItemText>\n                    <Select.ItemIndicator>✓</Select.ItemIndicator>\n                  </Select.Item>\n                )}\n              </Index>\n            </Select.ItemGroup>\n          </Select.Content>\n        </Select.Positioner>\n      </Portal>\n    </Select.Root>\n  )\n}\n"
}
