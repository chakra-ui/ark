{
  "Basic": "import { ChevronDownIcon } from 'lucide-solid'\nimport { Index } from 'solid-js'\nimport { Accordion } from '@ark-ui/solid'\n\nexport const Basic = () => {\n  return (\n    <Accordion.Root value={['React']}>\n      <Index each={['React', 'Solid', 'Vue']}>\n        {(item) => (\n          <Accordion.Item value={item()}>\n            <Accordion.ItemTrigger>\n              What is {item()}?\n              <Accordion.ItemIndicator>\n                <ChevronDownIcon />\n              </Accordion.ItemIndicator>\n            </Accordion.ItemTrigger>\n            <Accordion.ItemContent>\n              {item()} is a JavaScript library for building user interfaces.\n            </Accordion.ItemContent>\n          </Accordion.Item>\n        )}\n      </Index>\n    </Accordion.Root>\n  )\n}\n",
  "RenderProp": "import { Index } from 'solid-js'\nimport { Accordion } from '@ark-ui/solid'\n\nexport const RenderProp = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root>\n      <Index each={items}>\n        {(item) => (\n          <Accordion.Item value={item()}>\n            <Accordion.ItemContext>\n              {(api) => (\n                <>\n                  <Accordion.ItemTrigger>{api().isOpen ? 'Close' : 'Open'}</Accordion.ItemTrigger>\n                  <Accordion.ItemContent>{item()} content</Accordion.ItemContent>\n                </>\n              )}\n            </Accordion.ItemContext>\n          </Accordion.Item>\n        )}\n      </Index>\n    </Accordion.Root>\n  )\n}\n",
  "Collapsible": "import { ChevronDownIcon } from 'lucide-solid'\nimport { Index } from 'solid-js'\nimport { Accordion } from '@ark-ui/solid'\n\nexport const Collapsible = () => {\n  return (\n    <Accordion.Root value={['React']} collapsible>\n      <Index each={['React', 'Solid', 'Vue']}>\n        {(item) => (\n          <Accordion.Item value={item()}>\n            <Accordion.ItemTrigger>\n              What is {item()}?\n              <Accordion.ItemIndicator>\n                <ChevronDownIcon />\n              </Accordion.ItemIndicator>\n            </Accordion.ItemTrigger>\n            <Accordion.ItemContent>\n              {item()} is a JavaScript library for building user interfaces.\n            </Accordion.ItemContent>\n          </Accordion.Item>\n        )}\n      </Index>\n    </Accordion.Root>\n  )\n}\n",
  "Multiple": "import { ChevronDownIcon } from 'lucide-solid'\nimport { Index } from 'solid-js'\nimport { Accordion } from '@ark-ui/solid'\n\nexport const Multiple = () => {\n  return (\n    <Accordion.Root value={['React']} multiple>\n      <Index each={['React', 'Solid', 'Vue']}>\n        {(item) => (\n          <Accordion.Item value={item()}>\n            <Accordion.ItemTrigger>\n              What is {item()}?\n              <Accordion.ItemIndicator>\n                <ChevronDownIcon />\n              </Accordion.ItemIndicator>\n            </Accordion.ItemTrigger>\n            <Accordion.ItemContent>\n              {item()} is a JavaScript library for building user interfaces.\n            </Accordion.ItemContent>\n          </Accordion.Item>\n        )}\n      </Index>\n    </Accordion.Root>\n  )\n}\n",
  "Controlled": "import { Index, createSignal } from 'solid-js'\nimport { Accordion } from '@ark-ui/solid'\n\nexport const Controlled = () => {\n  const [value, setValue] = createSignal<string[]>([])\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root value={value()} onValueChange={(details) => setValue(details.value)}>\n      <Index each={items}>\n        {(item) => (\n          <Accordion.Item value={item()}>\n            <Accordion.ItemTrigger>{item()} trigger</Accordion.ItemTrigger>\n            <Accordion.ItemContent>{item()} content</Accordion.ItemContent>\n          </Accordion.Item>\n        )}\n      </Index>\n    </Accordion.Root>\n  )\n}\n",
  "Vertical": "import { Index } from 'solid-js'\nimport { Accordion } from '@ark-ui/solid'\n\nexport const Vertical = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root orientation=\"vertical\">\n      <Index each={items}>\n        {(item) => (\n          <Accordion.Item value={item()}>\n            <Accordion.ItemTrigger>{item()} trigger</Accordion.ItemTrigger>\n            <Accordion.ItemContent>{item()} content</Accordion.ItemContent>\n          </Accordion.Item>\n        )}\n      </Index>\n    </Accordion.Root>\n  )\n}\n",
  "Disabled": "import { Index } from 'solid-js'\nimport { Accordion } from '@ark-ui/solid'\n\nexport const Disabled = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root>\n      <Index each={items}>\n        {(item) => (\n          <Accordion.Item value={item()} disabled={item() === 'panel-2'}>\n            <Accordion.ItemTrigger>{item()} trigger</Accordion.ItemTrigger>\n            <Accordion.ItemContent>{item()} content</Accordion.ItemContent>\n          </Accordion.Item>\n        )}\n      </Index>\n    </Accordion.Root>\n  )\n}\n"
}
