{
  "Basic": "import { Index } from 'solid-js'\nimport { PinInput } from '@ark-ui/solid'\n\nexport const Basic = () => (\n  <PinInput.Root onValueComplete={(e) => alert(e.valueAsString)}>\n    <PinInput.Label>Label</PinInput.Label>\n    <PinInput.Control>\n      <Index each={[0, 1, 2]}>{(id) => <PinInput.Input index={id()} />}</Index>\n    </PinInput.Control>\n  </PinInput.Root>\n)\n",
  "InitialValue": "import { Index } from 'solid-js'\nimport { PinInput } from '@ark-ui/solid'\n\nexport const InitialValue = () => (\n  <PinInput.Root value={['1', '2', '3']}>\n    <PinInput.Label>Label</PinInput.Label>\n    <PinInput.Control>\n      <Index each={[0, 1, 2]}>{(id) => <PinInput.Input index={id()} />}</Index>\n    </PinInput.Control>\n  </PinInput.Root>\n)\n",
  "Customized": "import { Index } from 'solid-js'\nimport { PinInput } from '@ark-ui/solid'\n\nexport const Customized = () => (\n  <PinInput.Root placeholder=\"*\">\n    <PinInput.Label>Label</PinInput.Label>\n    <PinInput.Control>\n      <Index each={[0, 1, 2]}>{(id) => <PinInput.Input index={id()} />}</Index>\n    </PinInput.Control>\n  </PinInput.Root>\n)\n",
  "Blurred": "import { Index } from 'solid-js'\nimport { PinInput } from '@ark-ui/solid'\n\nexport const Blurred = () => (\n  <PinInput.Root blurOnComplete>\n    <PinInput.Label>Label</PinInput.Label>\n    <PinInput.Control>\n      <Index each={[0, 1, 2]}>{(id) => <PinInput.Input index={id()} />}</Index>\n    </PinInput.Control>\n  </PinInput.Root>\n)\n",
  "OTpMode": "import { Index } from 'solid-js'\nimport { PinInput } from '@ark-ui/solid'\n\nexport const OTPMode = () => (\n  <PinInput.Root otp>\n    <PinInput.Label>Label</PinInput.Label>\n    <PinInput.Control>\n      <Index each={[0, 1, 2]}>{(id) => <PinInput.Input index={id()} />}</Index>\n    </PinInput.Control>\n  </PinInput.Root>\n)\n",
  "WithMask": "import { Index } from 'solid-js'\nimport { PinInput } from '@ark-ui/solid'\n\nexport const WithMask = () => (\n  <PinInput.Root mask>\n    <PinInput.Label>Label</PinInput.Label>\n    <PinInput.Control>\n      <Index each={[0, 1, 2]}>{(id) => <PinInput.Input index={id()} />}</Index>\n    </PinInput.Control>\n  </PinInput.Root>\n)\n"
}
