{
  "Basic": "import { Portal } from 'solid-js/web'\nimport { DatePicker } from '@ark-ui/solid'\n\nexport const Basic = () => {\n  return (\n    <DatePicker.Root>\n      <DatePicker.Label>Label</DatePicker.Label>\n      <DatePicker.Control>\n        <DatePicker.Input />\n        <DatePicker.Trigger>ðŸ“…</DatePicker.Trigger>\n        <DatePicker.ClearTrigger>Clear</DatePicker.ClearTrigger>\n      </DatePicker.Control>\n      <Portal>\n        <DatePicker.Positioner>\n          <DatePicker.Content>\n            <DatePicker.YearSelect />\n            <DatePicker.MonthSelect />\n            <DatePicker.View view=\"day\">\n              <DatePicker.Context>\n                {(context) => (\n                  <>\n                    <DatePicker.ViewControl>\n                      <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n                      <DatePicker.ViewTrigger>\n                        <DatePicker.RangeText />\n                      </DatePicker.ViewTrigger>\n                      <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n                    </DatePicker.ViewControl>\n                    <DatePicker.Table>\n                      <DatePicker.TableHead>\n                        <DatePicker.TableRow>\n                          {context().weekDays.map((weekDay) => (\n                            <DatePicker.TableHeader>{weekDay.short}</DatePicker.TableHeader>\n                          ))}\n                        </DatePicker.TableRow>\n                      </DatePicker.TableHead>\n                      <DatePicker.TableBody>\n                        {context().weeks.map((week) => (\n                          <DatePicker.TableRow>\n                            {week.map((day) => (\n                              <DatePicker.TableCell value={day}>\n                                <DatePicker.TableCellTrigger>{day.day}</DatePicker.TableCellTrigger>\n                              </DatePicker.TableCell>\n                            ))}\n                          </DatePicker.TableRow>\n                        ))}\n                      </DatePicker.TableBody>\n                    </DatePicker.Table>\n                  </>\n                )}\n              </DatePicker.Context>\n            </DatePicker.View>\n            <DatePicker.View view=\"month\">\n              <DatePicker.Context>\n                {(context) => (\n                  <>\n                    <DatePicker.ViewControl>\n                      <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n                      <DatePicker.ViewTrigger>\n                        <DatePicker.RangeText />\n                      </DatePicker.ViewTrigger>\n                      <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n                    </DatePicker.ViewControl>\n                    <DatePicker.Table>\n                      <DatePicker.TableBody>\n                        {context()\n                          .getMonthsGrid({ columns: 4, format: 'short' })\n                          .map((months) => (\n                            <DatePicker.TableRow>\n                              {months.map((month) => (\n                                <DatePicker.TableCell value={month.value}>\n                                  <DatePicker.TableCellTrigger>\n                                    {month.label}\n                                  </DatePicker.TableCellTrigger>\n                                </DatePicker.TableCell>\n                              ))}\n                            </DatePicker.TableRow>\n                          ))}\n                      </DatePicker.TableBody>\n                    </DatePicker.Table>\n                  </>\n                )}\n              </DatePicker.Context>\n            </DatePicker.View>\n            <DatePicker.View view=\"year\">\n              <DatePicker.Context>\n                {(context) => (\n                  <>\n                    <DatePicker.ViewControl>\n                      <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n                      <DatePicker.ViewTrigger>\n                        <DatePicker.RangeText />\n                      </DatePicker.ViewTrigger>\n                      <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n                    </DatePicker.ViewControl>\n                    <DatePicker.Table>\n                      <DatePicker.TableBody>\n                        {context()\n                          .getYearsGrid({ columns: 4 })\n                          .map((years) => (\n                            <DatePicker.TableRow>\n                              {years.map((year) => (\n                                <DatePicker.TableCell value={year.value}>\n                                  <DatePicker.TableCellTrigger>\n                                    {year.label}\n                                  </DatePicker.TableCellTrigger>\n                                </DatePicker.TableCell>\n                              ))}\n                            </DatePicker.TableRow>\n                          ))}\n                      </DatePicker.TableBody>\n                    </DatePicker.Table>\n                  </>\n                )}\n              </DatePicker.Context>\n            </DatePicker.View>\n          </DatePicker.Content>\n        </DatePicker.Positioner>\n      </Portal>\n    </DatePicker.Root>\n  )\n}\n",
  "Standalone": "import { DatePicker } from '@ark-ui/solid'\n\nexport const Standalone = () => {\n  return (\n    <DatePicker.Root open={true} closeOnSelect={false}>\n      <DatePicker.Context>\n        {(context) => (\n          <>\n            <DatePicker.View view=\"day\">\n              <DatePicker.ViewControl>\n                <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n                <DatePicker.ViewTrigger>\n                  <DatePicker.RangeText />\n                </DatePicker.ViewTrigger>\n                <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n              </DatePicker.ViewControl>\n              <DatePicker.Table>\n                <DatePicker.TableHead>\n                  <DatePicker.TableRow>\n                    {context().weekDays.map((weekDay) => (\n                      <DatePicker.TableHeader>{weekDay.short}</DatePicker.TableHeader>\n                    ))}\n                  </DatePicker.TableRow>\n                </DatePicker.TableHead>\n                <DatePicker.TableBody>\n                  {context().weeks.map((week) => (\n                    <DatePicker.TableRow>\n                      {week.map((day) => (\n                        <DatePicker.TableCell value={day}>\n                          <DatePicker.TableCellTrigger>{day.day}</DatePicker.TableCellTrigger>\n                        </DatePicker.TableCell>\n                      ))}\n                    </DatePicker.TableRow>\n                  ))}\n                </DatePicker.TableBody>\n              </DatePicker.Table>\n            </DatePicker.View>\n          </>\n        )}\n      </DatePicker.Context>\n    </DatePicker.Root>\n  )\n}\n",
  "Range": "import { Portal } from 'solid-js/web'\nimport { DatePicker } from '@ark-ui/solid'\n\nexport const Range = () => {\n  return (\n    <DatePicker.Root selectionMode=\"range\">\n      <DatePicker.Label>Label</DatePicker.Label>\n      <DatePicker.Control>\n        <DatePicker.Input index={0} />\n        <DatePicker.Input index={1} />\n        <DatePicker.Trigger>ðŸ“…</DatePicker.Trigger>\n        <DatePicker.ClearTrigger>Clear</DatePicker.ClearTrigger>\n      </DatePicker.Control>\n      <DatePicker.PresetTrigger value=\"last7Days\">Last 7 days</DatePicker.PresetTrigger>\n      <Portal>\n        <DatePicker.Positioner>\n          <DatePicker.Content>\n            <DatePicker.YearSelect />\n            <DatePicker.MonthSelect />\n            <DatePicker.View view=\"day\">\n              <DatePicker.Context>\n                {(context) => (\n                  <>\n                    <DatePicker.ViewControl>\n                      <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n                      <DatePicker.ViewTrigger>\n                        <DatePicker.RangeText />\n                      </DatePicker.ViewTrigger>\n                      <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n                    </DatePicker.ViewControl>\n                    <DatePicker.Table>\n                      <DatePicker.TableHead>\n                        <DatePicker.TableRow>\n                          {context().weekDays.map((weekDay) => (\n                            <DatePicker.TableHeader>{weekDay.short}</DatePicker.TableHeader>\n                          ))}\n                        </DatePicker.TableRow>\n                      </DatePicker.TableHead>\n                      <DatePicker.TableBody>\n                        {context().weeks.map((week) => (\n                          <DatePicker.TableRow>\n                            {week.map((day) => (\n                              <DatePicker.TableCell value={day}>\n                                <DatePicker.TableCellTrigger>{day.day}</DatePicker.TableCellTrigger>\n                              </DatePicker.TableCell>\n                            ))}\n                          </DatePicker.TableRow>\n                        ))}\n                      </DatePicker.TableBody>\n                    </DatePicker.Table>\n                  </>\n                )}\n              </DatePicker.Context>\n            </DatePicker.View>\n            <DatePicker.View view=\"month\">\n              <DatePicker.Context>\n                {(context) => (\n                  <>\n                    <DatePicker.ViewControl>\n                      <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n                      <DatePicker.ViewTrigger>\n                        <DatePicker.RangeText />\n                      </DatePicker.ViewTrigger>\n                      <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n                    </DatePicker.ViewControl>\n                    <DatePicker.Table>\n                      <DatePicker.TableBody>\n                        {context()\n                          .getMonthsGrid({ columns: 4, format: 'short' })\n                          .map((months) => (\n                            <DatePicker.TableRow>\n                              {months.map((month) => (\n                                <DatePicker.TableCell value={month.value}>\n                                  <DatePicker.TableCellTrigger>\n                                    {month.label}\n                                  </DatePicker.TableCellTrigger>\n                                </DatePicker.TableCell>\n                              ))}\n                            </DatePicker.TableRow>\n                          ))}\n                      </DatePicker.TableBody>\n                    </DatePicker.Table>\n                  </>\n                )}\n              </DatePicker.Context>\n            </DatePicker.View>\n            <DatePicker.View view=\"year\">\n              <DatePicker.Context>\n                {(context) => (\n                  <>\n                    <DatePicker.ViewControl>\n                      <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n                      <DatePicker.ViewTrigger>\n                        <DatePicker.RangeText />\n                      </DatePicker.ViewTrigger>\n                      <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n                    </DatePicker.ViewControl>\n                    <DatePicker.Table>\n                      <DatePicker.TableBody>\n                        {context()\n                          .getYearsGrid({ columns: 4 })\n                          .map((years) => (\n                            <DatePicker.TableRow>\n                              {years.map((year) => (\n                                <DatePicker.TableCell value={year.value}>\n                                  <DatePicker.TableCellTrigger>\n                                    {year.label}\n                                  </DatePicker.TableCellTrigger>\n                                </DatePicker.TableCell>\n                              ))}\n                            </DatePicker.TableRow>\n                          ))}\n                      </DatePicker.TableBody>\n                    </DatePicker.Table>\n                  </>\n                )}\n              </DatePicker.Context>\n            </DatePicker.View>\n          </DatePicker.Content>\n        </DatePicker.Positioner>\n      </Portal>\n    </DatePicker.Root>\n  )\n}\n"
}
