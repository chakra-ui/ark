{
  "Basic": "import { StarIcon } from 'lucide-react'\nimport { RatingGroup } from '@ark-ui/react'\n\nexport const Basic = () => (\n  <RatingGroup.Root count={5} defaultValue={3}>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      <RatingGroup.Context>\n        {({ items }) =>\n          items.map((item) => (\n            <RatingGroup.Item key={item} index={item}>\n              <RatingGroup.ItemContext>\n                {({ isHighlighted }) =>\n                  isHighlighted ? <StarIcon fill=\"current\" /> : <StarIcon />\n                }\n              </RatingGroup.ItemContext>\n            </RatingGroup.Item>\n          ))\n        }\n      </RatingGroup.Context>\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "HalfRatings": "import { StarHalfIcon, StarIcon } from 'lucide-react'\nimport { RatingGroup } from '@ark-ui/react'\n\nexport const HalfRatings = () => (\n  <RatingGroup.Root count={5} defaultValue={3} allowHalf>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      <RatingGroup.Context>\n        {({ items }) =>\n          items.map((item) => (\n            <RatingGroup.Item key={item} index={item}>\n              <RatingGroup.ItemContext>\n                {({ isHalf, isHighlighted }) => {\n                  if (isHalf) return <StarHalfIcon fill=\"current\" />\n                  if (isHighlighted) return <StarIcon fill=\"current\" />\n                  return <StarIcon />\n                }}\n              </RatingGroup.ItemContext>\n            </RatingGroup.Item>\n          ))\n        }\n      </RatingGroup.Context>\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "InitialValue": "import { StarIcon } from 'lucide-react'\nimport { RatingGroup } from '@ark-ui/react'\n\nexport const InitialValue = () => (\n  <RatingGroup.Root count={5} defaultValue={2} readOnly>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      <RatingGroup.Context>\n        {({ items }) =>\n          items.map((item) => (\n            <RatingGroup.Item key={item} index={item}>\n              <RatingGroup.ItemContext>\n                {({ isHighlighted }) =>\n                  isHighlighted ? <StarIcon fill=\"current\" /> : <StarIcon />\n                }\n              </RatingGroup.ItemContext>\n            </RatingGroup.Item>\n          ))\n        }\n      </RatingGroup.Context>\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "Controlled": "import { StarIcon } from 'lucide-react'\nimport { useState } from 'react'\nimport { RatingGroup } from '@ark-ui/react'\n\nexport const Controlled = () => {\n  const [value, setValue] = useState(0)\n\n  return (\n    <RatingGroup.Root\n      count={5}\n      value={value}\n      onValueChange={(details) => setValue(details.value)}\n      allowHalf\n    >\n      <RatingGroup.Label>Label</RatingGroup.Label>\n      <RatingGroup.Control>\n        <RatingGroup.Context>\n          {({ items }) =>\n            items.map((item) => (\n              <RatingGroup.Item key={item} index={item}>\n                <RatingGroup.ItemContext>\n                  {({ isHighlighted }) =>\n                    isHighlighted ? <StarIcon fill=\"current\" /> : <StarIcon />\n                  }\n                </RatingGroup.ItemContext>\n              </RatingGroup.Item>\n            ))\n          }\n        </RatingGroup.Context>\n      </RatingGroup.Control>\n    </RatingGroup.Root>\n  )\n}\n",
  "Disabled": "import { StarIcon } from 'lucide-react'\nimport { RatingGroup } from '@ark-ui/react'\n\nexport const Disabled = () => (\n  <RatingGroup.Root count={5} defaultValue={3} disabled>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      <RatingGroup.Context>\n        {({ items }) =>\n          items.map((item) => (\n            <RatingGroup.Item key={item} index={item}>\n              <RatingGroup.ItemContext>\n                {({ isHighlighted }) =>\n                  isHighlighted ? <StarIcon fill=\"current\" /> : <StarIcon />\n                }\n              </RatingGroup.ItemContext>\n            </RatingGroup.Item>\n          ))\n        }\n      </RatingGroup.Context>\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "ReadOnly": "import { StarIcon } from 'lucide-react'\nimport { RatingGroup } from '@ark-ui/react'\n\nexport const ReadOnly = () => (\n  <RatingGroup.Root count={5} defaultValue={3} readOnly>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      <RatingGroup.Context>\n        {({ items }) =>\n          items.map((item) => (\n            <RatingGroup.Item key={item} index={item}>\n              <RatingGroup.ItemContext>\n                {({ isHighlighted }) =>\n                  isHighlighted ? <StarIcon fill=\"currrent\" /> : <StarIcon />\n                }\n              </RatingGroup.ItemContext>\n            </RatingGroup.Item>\n          ))\n        }\n      </RatingGroup.Context>\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "FormUsage": "import { StarIcon } from 'lucide-react'\nimport { RatingGroup } from '@ark-ui/react'\n\nexport const FormUsage = () => (\n  <RatingGroup.Root name=\"my-rating\" count={5} defaultValue={3}>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      <RatingGroup.Context>\n        {({ items }) =>\n          items.map((item) => (\n            <RatingGroup.Item key={item} index={item}>\n              <RatingGroup.ItemContext>\n                {({ isHighlighted }) =>\n                  isHighlighted ? <StarIcon fill=\"current\" /> : <StarIcon />\n                }\n              </RatingGroup.ItemContext>\n            </RatingGroup.Item>\n          ))\n        }\n      </RatingGroup.Context>\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n"
}
