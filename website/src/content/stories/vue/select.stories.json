{
  "Basic": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Select } from '@ark-ui/vue'\nimport { ChevronDownIcon } from './icons'\n\nconst basicItems = ref(['React', 'Solid', 'Vue'])\nconst advancedItems = ref([\n  { label: 'React', value: 'react' },\n  { label: 'Solid', value: 'solid' },\n  { label: 'Vue', value: 'vue' },\n  { label: 'Svelte', value: 'svelte', disabled: true },\n])\n\nconst value = ref(['vue'])\n</script>\n\n<template>\n  <Select.Root :items=\"basicItems\">\n    <Select.Label>Framework</Select.Label>\n    <Select.Control>\n      <Select.Trigger>\n        <Select.ValueText placeholder=\"Select a Framework\" />\n        <Select.Indicator>\n          <ChevronDownIcon />\n        </Select.Indicator>\n      </Select.Trigger>\n      <Select.ClearTrigger>Clear</Select.ClearTrigger>\n    </Select.Control>\n    <Teleport to=\"body\">\n      <Select.Positioner>\n        <Select.Content>\n          <Select.ItemGroup id=\"framework\">\n            <Select.ItemGroupLabel htmlFor=\"framework\">Frameworks</Select.ItemGroupLabel>\n            <Select.Item v-for=\"item in basicItems\" :key=\"item\" :item=\"item\">\n              <Select.ItemText>{{ item }}</Select.ItemText>\n              <Select.ItemIndicator>✓</Select.ItemIndicator>\n            </Select.Item>\n          </Select.ItemGroup>\n        </Select.Content>\n      </Select.Positioner>\n    </Teleport>\n  </Select.Root>\n</template>\n",
  "Advanced": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Select } from '@ark-ui/vue'\nimport { ChevronDownIcon } from './icons'\n\nconst basicItems = ref(['React', 'Solid', 'Vue'])\nconst advancedItems = ref([\n  { label: 'React', value: 'react' },\n  { label: 'Solid', value: 'solid' },\n  { label: 'Vue', value: 'vue' },\n  { label: 'Svelte', value: 'svelte', disabled: true },\n])\n\nconst value = ref(['vue'])\n</script>\n\n<template>\n  <Select.Root :items=\"advancedItems\">\n    <Select.Label>Framework</Select.Label>\n    <Select.Control>\n      <Select.Trigger>\n        <Select.ValueText placeholder=\"Select a Framework\" />\n        <Select.Indicator>\n          <ChevronDownIcon />\n        </Select.Indicator>\n      </Select.Trigger>\n      <Select.ClearTrigger>Clear</Select.ClearTrigger>\n    </Select.Control>\n    <Teleport to=\"body\">\n      <Select.Positioner>\n        <Select.Content>\n          <Select.ItemGroup id=\"framework\">\n            <Select.ItemGroupLabel htmlFor=\"framework\">Frameworks</Select.ItemGroupLabel>\n            <Select.Item v-for=\"item in advancedItems\" :key=\"item.value\" :item=\"item\">\n              <Select.ItemText>{{ item.label }}</Select.ItemText>\n              <Select.ItemIndicator>✓</Select.ItemIndicator>\n            </Select.Item>\n          </Select.ItemGroup>\n        </Select.Content>\n      </Select.Positioner>\n    </Teleport>\n  </Select.Root>\n</template>\n",
  "Multiple": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Select } from '@ark-ui/vue'\nimport { ChevronDownIcon } from './icons'\n\nconst basicItems = ref(['React', 'Solid', 'Vue'])\nconst advancedItems = ref([\n  { label: 'React', value: 'react' },\n  { label: 'Solid', value: 'solid' },\n  { label: 'Vue', value: 'vue' },\n  { label: 'Svelte', value: 'svelte', disabled: true },\n])\n\nconst value = ref(['vue'])\n</script>\n\n<template>\n  <Select.Root :items=\"advancedItems\" multiple>\n    <Select.Label>Framework</Select.Label>\n    <Select.Control>\n      <Select.Trigger>\n        <Select.ValueText placeholder=\"Select a Framework\" />\n        <Select.Indicator>\n          <ChevronDownIcon />\n        </Select.Indicator>\n      </Select.Trigger>\n      <Select.ClearTrigger>Clear</Select.ClearTrigger>\n    </Select.Control>\n    <Teleport to=\"body\">\n      <Select.Positioner>\n        <Select.Content>\n          <Select.ItemGroup id=\"framework\">\n            <Select.ItemGroupLabel htmlFor=\"framework\">Frameworks</Select.ItemGroupLabel>\n            <Select.Item v-for=\"item in advancedItems\" :key=\"item.value\" :item=\"item\">\n              <Select.ItemText>{{ item.label }}</Select.ItemText>\n              <Select.ItemIndicator>✓</Select.ItemIndicator>\n            </Select.Item>\n          </Select.ItemGroup>\n        </Select.Content>\n      </Select.Positioner>\n    </Teleport>\n  </Select.Root>\n</template>\n",
  "Controlled": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Select } from '@ark-ui/vue'\nimport { ChevronDownIcon } from './icons'\n\nconst basicItems = ref(['React', 'Solid', 'Vue'])\nconst advancedItems = ref([\n  { label: 'React', value: 'react' },\n  { label: 'Solid', value: 'solid' },\n  { label: 'Vue', value: 'vue' },\n  { label: 'Svelte', value: 'svelte', disabled: true },\n])\n\nconst value = ref(['vue'])\n</script>\n\n<template>\n  <Select.Root :items=\"advancedItems\" v-model=\"value\">\n    <Select.Label>Framework</Select.Label>\n    <Select.Control>\n      <Select.Trigger>\n        <Select.ValueText placeholder=\"Select a Framework\" />\n        <Select.Indicator>\n          <ChevronDownIcon />\n        </Select.Indicator>\n      </Select.Trigger>\n      <Select.ClearTrigger>Clear</Select.ClearTrigger>\n    </Select.Control>\n    <Teleport to=\"body\">\n      <Select.Positioner>\n        <Select.Content>\n          <Select.ItemGroup id=\"framework\">\n            <Select.ItemGroupLabel htmlFor=\"framework\">Frameworks</Select.ItemGroupLabel>\n            <Select.Item v-for=\"item in advancedItems\" :key=\"item.value\" :item=\"item\">\n              <Select.ItemText>{{ item.label }}</Select.ItemText>\n              <Select.ItemIndicator>✓</Select.ItemIndicator>\n            </Select.Item>\n          </Select.ItemGroup>\n        </Select.Content>\n      </Select.Positioner>\n    </Teleport>\n  </Select.Root>\n</template>\n"
}
