{
  "Context": { "props": { "render": { "type": "Snippet<[UseSegmentGroupContext]>", "isRequired": true } } },
  "Indicator": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'div'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "ItemContext": { "props": { "render": { "type": "Snippet<[UseSegmentGroupItemContext]>", "isRequired": true } } },
  "ItemControl": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'div'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "ItemHiddenInput": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'input'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Item": {
    "props": {
      "value": { "type": "string", "isRequired": true },
      "asChild": {
        "type": "Snippet<[PropsFn<'label'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "disabled": { "type": "boolean", "isRequired": false },
      "invalid": { "type": "boolean", "isRequired": false }
    }
  },
  "ItemText": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'span'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Label": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'label'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Root": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'div'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "defaultValue": {
        "type": "string",
        "isRequired": false,
        "description": "The initial value of the checked radio when rendered.\nUse when you don't need to control the value of the radio group."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "If `true`, the radio group will be disabled"
      },
      "form": { "type": "string", "isRequired": false, "description": "The associate form of the underlying input." },
      "id": { "type": "string", "isRequired": false, "description": "The unique identifier of the machine." },
      "ids": {
        "type": "Partial<{\n  root: string\n  label: string\n  indicator: string\n  item(value: string): string\n  itemLabel(value: string): string\n  itemControl(value: string): string\n  itemHiddenInput(value: string): string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the radio. Useful for composition."
      },
      "name": {
        "type": "string",
        "isRequired": false,
        "description": "The name of the input fields in the radio\n(Useful for form submission)."
      },
      "onValueChange": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "Function called once a radio is checked"
      },
      "orientation": {
        "type": "'horizontal' | 'vertical'",
        "isRequired": false,
        "description": "Orientation of the radio group"
      },
      "readOnly": { "type": "boolean", "isRequired": false, "description": "Whether the checkbox is read-only" },
      "value": { "type": "string", "isRequired": false, "description": "The controlled value of the radio group" }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "UseSegmentGroupReturn", "isRequired": true },
      "asChild": {
        "type": "Snippet<[PropsFn<'div'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  }
}
