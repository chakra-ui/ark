{
  "Arrow": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "ArrowTip": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Content": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Positioner": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Root": {
    "props": {
      "aria-label": { "type": "string", "isRequired": false, "description": "Custom label for the tooltip." },
      "closeDelay": {
        "type": "number",
        "defaultValue": "500",
        "isRequired": false,
        "description": "The close delay of the tooltip."
      },
      "closeOnClick": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether the tooltip should close on click"
      },
      "closeOnEscape": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to close the tooltip when the Escape key is pressed."
      },
      "closeOnPointerDown": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to close the tooltip on pointerdown."
      },
      "closeOnScroll": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether the tooltip should close on scroll"
      },
      "defaultOpen": {
        "type": "boolean",
        "isRequired": false,
        "description": "The initial open state of the tooltip when rendered.\nUse when you don't need to control the open state of the tooltip."
      },
      "disabled": { "type": "boolean", "isRequired": false, "description": "Whether the tooltip is disabled" },
      "id": { "type": "string", "isRequired": false, "description": "The unique identifier of the machine." },
      "ids": {
        "type": "Partial<{ trigger: string; content: string; arrow: string; positioner: string }>",
        "isRequired": false,
        "description": "The ids of the elements in the tooltip. Useful for composition."
      },
      "immediate": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to synchronize the present change immediately or defer it to the next frame"
      },
      "interactive": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether the tooltip's content is interactive.\nIn this mode, the tooltip will remain open when user hovers over the content."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "onExitComplete": {
        "type": "VoidFunction",
        "isRequired": false,
        "description": "Function called when the animation ends in the closed state"
      },
      "onOpenChange": {
        "type": "(details: OpenChangeDetails) => void",
        "isRequired": false,
        "description": "Function called when the tooltip is opened."
      },
      "open": { "type": "boolean", "isRequired": false, "description": "The controlled open state of the tooltip" },
      "openDelay": {
        "type": "number",
        "defaultValue": "1000",
        "isRequired": false,
        "description": "The open delay of the tooltip."
      },
      "positioning": {
        "type": "PositioningOptions",
        "isRequired": false,
        "description": "The user provided options used to position the popover content"
      },
      "present": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the node is present (controlled by the user)"
      },
      "skipAnimationOnMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to allow the initial presence animation."
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "UseTooltipReturn", "isRequired": true },
      "immediate": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to synchronize the present change immediately or defer it to the next frame"
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "onExitComplete": {
        "type": "VoidFunction",
        "isRequired": false,
        "description": "Function called when the animation ends in the closed state"
      },
      "present": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the node is present (controlled by the user)"
      },
      "skipAnimationOnMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to allow the initial presence animation."
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "Trigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLButtonElement"
  }
}
