{
  "Control": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "Indicator": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    },
    "copied": {
      "type": "type ONLY_FOR_FORMAT =\n  | string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | Iterable<ReactNode>\n  | ReactPortal",
      "isRequired": false
    }
  },
  "Input": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "Label": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "Root": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    },
    "getRootNode": {
      "type": "() => ShadowRoot | Node | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{ root: string; input: string; label: string }>",
      "isRequired": false,
      "description": "The ids of the elements in the clipboard. Useful for composition."
    },
    "onCopyStatusChange": {
      "type": "(details: CopyStatusDetails) => void",
      "isRequired": false,
      "description": "The function to be called when the value is copied to the clipboard"
    },
    "timeout": {
      "type": "number",
      "isRequired": false,
      "description": "The timeout for the copy operation"
    },
    "value": {
      "type": "string",
      "isRequired": false,
      "description": "The value to be copied to the clipboard"
    }
  },
  "Trigger": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  }
}
