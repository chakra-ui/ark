{
  "AreaBackground": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  },
  "Area": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false },
      "xChannel": { "type": "ColorChannel", "isRequired": false },
      "yChannel": { "type": "ColorChannel", "isRequired": false }
    }
  },
  "AreaThumb": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  },
  "ChannelInput": {
    "props": {
      "channel": { "type": "ExtendedColorChannel", "isRequired": true },
      "asChild": { "type": "(props: ParentProps<'input'>) => Element", "isRequired": false },
      "orientation": { "type": "Orientation", "isRequired": false }
    }
  },
  "ChannelSlider": {
    "props": {
      "channel": { "type": "ColorChannel", "isRequired": true },
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false },
      "orientation": { "type": "Orientation", "isRequired": false }
    }
  },
  "ChannelSliderThumb": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  },
  "ChannelSliderTrack": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  },
  "Content": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  },
  "Control": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  },
  "EyeDropperTrigger": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'button'>) => Element", "isRequired": false }
    }
  },
  "FormatSelect": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'select'>) => Element", "isRequired": false }
    }
  },
  "FormatTrigger": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'button'>) => Element", "isRequired": false }
    }
  },
  "HiddenInput": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'input'>) => Element", "isRequired": false }
    }
  },
  "Label": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'label'>) => Element", "isRequired": false }
    }
  },
  "Positioner": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  },
  "Root": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false },
      "closeOnSelect": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to close the color picker when a swatch is selected"
      },
      "defaultOpen": {
        "type": "boolean",
        "isRequired": false,
        "description": "The initial open state of the color picker when it is first rendered.\nUse when you do not need to control its open state."
      },
      "defaultValue": {
        "type": "string",
        "isRequired": false,
        "description": "The initial value of the color picker when it is first rendered.\nUse when you do not need to control the state of the color picker."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the color picker is disabled"
      },
      "format": {
        "type": "ColorFormat",
        "defaultValue": "\"rgba\"",
        "isRequired": false,
        "description": "The color format to use"
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{\n  root: string\n  control: string\n  trigger: string\n  label: string\n  input: string\n  content: string\n  area: string\n  areaGradient: string\n  areaThumb: string\n  channelInput(id: string): string\n  channelSliderTrack(id: ColorChannel): string\n  channelSliderThumb(id: ColorChannel): string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the color picker. Useful for composition."
      },
      "initialFocusEl": {
        "type": "() => HTMLElement | null",
        "isRequired": false,
        "description": "The initial focus element when the color picker is opened."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "name": {
        "type": "string",
        "isRequired": false,
        "description": "The name for the form input"
      },
      "onExitComplete": {
        "type": "() => void",
        "isRequired": false,
        "description": "Function called when the animation ends in the closed state."
      },
      "onFocusOutside": {
        "type": "(event: FocusOutsideEvent) => void",
        "isRequired": false,
        "description": "Function called when the focus is moved outside the component"
      },
      "onFormatChange": {
        "type": "(details: FormatChangeDetails) => void",
        "isRequired": false,
        "description": "Function called when the color format changes"
      },
      "onInteractOutside": {
        "type": "(event: InteractOutsideEvent) => void",
        "isRequired": false,
        "description": "Function called when an interaction happens outside the component"
      },
      "onOpenChange": {
        "type": "(details: OpenChangeDetails) => void",
        "isRequired": false,
        "description": "Handler that is called when the user opens or closes the color picker."
      },
      "onPointerDownOutside": {
        "type": "(event: PointerDownOutsideEvent) => void",
        "isRequired": false,
        "description": "Function called when the pointer is pressed down outside the component"
      },
      "onValueChange": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "Handler that is called when the value changes, as the user drags."
      },
      "onValueChangeEnd": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "Handler that is called when the user stops dragging."
      },
      "open": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the color picker is open"
      },
      "positioning": {
        "type": "PositioningOptions",
        "isRequired": false,
        "description": "The positioning options for the color picker"
      },
      "present": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the node is present (controlled by the user)"
      },
      "readOnly": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the color picker is read-only"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      },
      "value": {
        "type": "string",
        "isRequired": false,
        "description": "The current value of the color picker."
      }
    }
  },
  "SwatchGroup": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  },
  "SwatchIndicator": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  },
  "Swatch": {
    "props": {
      "value": { "type": "string | Color", "isRequired": true, "description": "The color value" },
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false },
      "respectAlpha": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to include the alpha channel in the color"
      }
    }
  },
  "SwatchTrigger": {
    "props": {
      "value": { "type": "string | Color", "isRequired": true, "description": "The color value" },
      "asChild": { "type": "(props: ParentProps<'button'>) => Element", "isRequired": false },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the swatch trigger is disabled"
      }
    }
  },
  "TransparencyGrid": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false },
      "size": { "type": "string", "isRequired": false }
    }
  },
  "Trigger": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'button'>) => Element", "isRequired": false }
    }
  },
  "ValueText": {
    "props": {
      "asChild": { "type": "(props: ParentProps<'span'>) => Element", "isRequired": false }
    }
  },
  "View": {
    "props": {
      "format": { "type": "ColorFormat", "isRequired": true },
      "asChild": { "type": "(props: ParentProps<'div'>) => Element", "isRequired": false }
    }
  }
}
