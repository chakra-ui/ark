{
  "Circle": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'svg'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "CircleRange": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'circle'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "CircleTrack": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'circle'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Label": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'label'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Range": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Root": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "ids": {
        "type": "Partial<{ root: string; track: string; label: string; circle: string }>",
        "isRequired": false,
        "description": "The ids of the elements in the progress bar. Useful for composition."
      },
      "max": {
        "type": "number",
        "defaultValue": "100",
        "isRequired": false,
        "description": "The maximum allowed value of the progress bar."
      },
      "min": {
        "type": "number",
        "defaultValue": "0",
        "isRequired": false,
        "description": "The minimum allowed value of the progress bar."
      },
      "orientation": {
        "type": "Orientation",
        "defaultValue": "\"horizontal\"",
        "isRequired": false,
        "description": "The orientation of the element."
      },
      "translations": {
        "type": "IntlTranslations",
        "isRequired": false,
        "description": "The localized messages to use."
      },
      "value": {
        "type": "number",
        "defaultValue": "50",
        "isRequired": false,
        "description": "The current value of the progress bar."
      }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "UseProgressReturn", "isRequired": true },
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Track": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "ValueText": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'span'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "View": {
    "props": {
      "state": { "type": "ProgressState", "isRequired": true },
      "asChild": {
        "type": "(props: ParentProps<'span'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  }
}
