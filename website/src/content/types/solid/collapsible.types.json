{
  "Content": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Indicator": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Root": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "defaultOpen": {
        "type": "boolean",
        "isRequired": false,
        "description": "The initial open state of the collapsible when rendered.\nUse when you don't need to control the open state of the collapsible."
      },
      "disabled": { "type": "boolean", "isRequired": false, "description": "Whether the collapsible is disabled." },
      "ids": {
        "type": "Partial<{ root: string; content: string; trigger: string }>",
        "isRequired": false,
        "description": "The ids of the elements in the collapsible. Useful for composition."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "onExitComplete": {
        "type": "VoidFunction",
        "isRequired": false,
        "description": "The callback invoked when the exit animation completes."
      },
      "onOpenChange": {
        "type": "(details: OpenChangeDetails) => void",
        "isRequired": false,
        "description": "The callback invoked when the open state changes."
      },
      "open": {
        "type": "boolean",
        "isRequired": false,
        "description": "The controlled open state of the collapsible."
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "UseCollapsibleReturn", "isRequired": true },
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Trigger": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'button'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  }
}
