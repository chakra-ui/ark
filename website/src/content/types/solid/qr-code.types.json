{
  "DownloadTrigger": {
    "props": {
      "fileName": { "type": "string", "isRequired": true, "description": "The name of the file." },
      "mimeType": { "type": "DataUrlType", "isRequired": true, "description": "The mime type of the image." },
      "asChild": {
        "type": "(props: ParentProps<'button'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "quality": { "type": "number", "isRequired": false, "description": "The quality of the image." }
    }
  },
  "Frame": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'svg'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Overlay": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Pattern": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'path'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Root": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "defaultValue": {
        "type": "string",
        "isRequired": false,
        "description": "The initial value to encode when rendered.\nUse when you don't need to control the value of the qr code."
      },
      "encoding": {
        "type": "QrCodeGenerateOptions",
        "isRequired": false,
        "description": "The qr code encoding options."
      },
      "ids": {
        "type": "Partial<{ root: string; frame: string }>",
        "isRequired": false,
        "description": "The element ids."
      },
      "onValueChange": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "Callback fired when the value changes."
      },
      "pixelSize": { "type": "number", "isRequired": false, "description": "The pixel size of the qr code." },
      "value": { "type": "string", "isRequired": false, "description": "The controlled value to encode." }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "UseQrCodeReturn", "isRequired": true },
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  }
}
