{
  "TabContent": {
    "props": {
      "value": { "type": "string", "isRequired": true, "description": "The value of the tab" },
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "TabIndicator": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "TabList": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "TabTrigger": {
    "props": {
      "value": { "type": "string", "isRequired": true, "description": "The value of the tab" },
      "asChild": {
        "type": "(props: ParentProps<'button'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the tab is disabled"
      }
    }
  },
  "Root": {
    "props": {
      "activationMode": {
        "type": "'manual' | 'automatic'",
        "defaultValue": "\"automatic\"",
        "isRequired": false,
        "description": "The activation mode of the tabs. Can be `manual` or `automatic`\n- `manual`: Tabs are activated when clicked or press `enter` key.\n- `automatic`: Tabs are activated when receiving focus"
      },
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "composite": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the tab is composite"
      },
      "defaultValue": {
        "type": "string",
        "isRequired": false,
        "description": "The initial value of the tabs when it is first rendered.\nUse when you do not need to control the state of the tabs."
      },
      "deselectable": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the active tab can be deselected when clicking on it."
      },
      "ids": {
        "type": "Partial<{\n  root: string\n  trigger: string\n  list: string\n  content: string\n  indicator: string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the tabs. Useful for composition."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "loopFocus": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether the keyboard navigation will loop from last tab to first, and vice versa."
      },
      "onFocusChange": {
        "type": "(details: FocusChangeDetails) => void",
        "isRequired": false,
        "description": "Callback to be called when the focused tab changes"
      },
      "onValueChange": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "Callback to be called when the selected/active tab changes"
      },
      "orientation": {
        "type": "'horizontal' | 'vertical'",
        "defaultValue": "\"horizontal\"",
        "isRequired": false,
        "description": "The orientation of the tabs. Can be `horizontal` or `vertical`\n- `horizontal`: only left and right arrow key navigation will work.\n- `vertical`: only up and down arrow key navigation will work."
      },
      "translations": {
        "type": "IntlTranslations",
        "isRequired": false,
        "description": "Specifies the localized strings that identifies the accessibility elements and their states"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      },
      "value": { "type": "string", "isRequired": false, "description": "The selected tab id" }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "UseTabsReturn", "isRequired": true },
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  }
}
