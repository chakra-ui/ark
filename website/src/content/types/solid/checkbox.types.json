{
  "Control": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Group": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "defaultValue": {
        "type": "string[] | Accessor<string[]>",
        "isRequired": false,
        "description": "The initial value of `value` when uncontrolled"
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "If `true`, the checkbox group is disabled"
      },
      "name": {
        "type": "string",
        "isRequired": false,
        "description": "The name of the input fields in the checkbox group\n(Useful for form submission)."
      },
      "onValueChange": {
        "type": "(value: string[]) => void",
        "isRequired": false,
        "description": "The callback to call when the value changes"
      },
      "readOnly": {
        "type": "boolean",
        "isRequired": false,
        "description": "If `true`, the checkbox group is read-only"
      },
      "value": {
        "type": "Accessor<string[]>",
        "isRequired": false,
        "description": "The controlled value of the checkbox group"
      }
    }
  },
  "HiddenInput": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'input'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Indicator": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'div'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "indeterminate": { "type": "boolean", "isRequired": false }
    }
  },
  "Label": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'span'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Root": {
    "props": {
      "asChild": {
        "type": "(props: ParentProps<'label'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "checked": {
        "type": "CheckedState",
        "isRequired": false,
        "description": "The checked state of the checkbox"
      },
      "defaultChecked": {
        "type": "CheckedState",
        "isRequired": false,
        "description": "The checked state of the checkbox when it is first rendered.\nUse this when you do not need to control the state of the checkbox."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the checkbox is disabled"
      },
      "ids": {
        "type": "Partial<{\n  root: string\n  hiddenInput: string\n  control: string\n  label: string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the checkbox. Useful for composition."
      },
      "invalid": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the checkbox is invalid"
      },
      "name": {
        "type": "string",
        "isRequired": false,
        "description": "The name of the input field in a checkbox.\nUseful for form submission."
      },
      "onCheckedChange": {
        "type": "(details: CheckedChangeDetails) => void",
        "isRequired": false,
        "description": "The callback invoked when the checked state changes."
      },
      "readOnly": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the checkbox is read-only"
      },
      "required": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the checkbox is required"
      },
      "value": {
        "type": "string",
        "defaultValue": "\"on\"",
        "isRequired": false,
        "description": "The value of checkbox input. Useful for form submission."
      }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "UseCheckboxReturn", "isRequired": true },
      "asChild": {
        "type": "(props: ParentProps<'label'>) => Element",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  }
}
