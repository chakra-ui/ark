{
  "Backdrop": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "CloseTrigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Content": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Description": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Positioner": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Root": {
    "emits": {
      "escapeKeyDown": {
        "type": "[event: KeyboardEvent]",
        "isRequired": true,
        "description": "Function called when the escape key is pressed"
      },
      "focusOutside": {
        "type": "[event: FocusOutsideEvent]",
        "isRequired": true,
        "description": "Function called when the focus is moved outside the component"
      },
      "interactOutside": {
        "type": "[event: InteractOutsideEvent]",
        "isRequired": true,
        "description": "Function called when an interaction happens outside the component"
      },
      "openChange": {
        "type": "[details: OpenChangeDetails]",
        "isRequired": true,
        "description": "Callback to be invoked when the dialog is opened or closed"
      },
      "pointerDownOutside": {
        "type": "[event: PointerDownOutsideEvent]",
        "isRequired": true,
        "description": "Function called when the pointer is pressed down outside the component"
      },
      "update:open": { "type": "[open: boolean]", "isRequired": true }
    },
    "props": {
      "aria-label": {
        "type": "string",
        "isRequired": false,
        "description": "Human readable label for the dialog, in event the dialog title is not rendered"
      },
      "closeOnEscape": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to close the dialog when the escape key is pressed"
      },
      "closeOnInteractOutside": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to close the dialog when the outside is clicked"
      },
      "defaultOpen": {
        "type": "boolean",
        "isRequired": false,
        "description": "The initial open state of the dialog when it is first rendered.\nUse when you do not need to control its open state."
      },
      "finalFocusEl": {
        "type": "() => HTMLElement",
        "isRequired": false,
        "description": "Element to receive focus when the dialog is closed"
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{\n  trigger: string\n  positioner: string\n  backdrop: string\n  content: string\n  closeTrigger: string\n  title: string\n  description: string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the dialog. Useful for composition."
      },
      "initialFocusEl": {
        "type": "() => HTMLElement",
        "isRequired": false,
        "description": "Element to receive focus when the dialog is opened"
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "modal": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to prevent pointer interaction outside the element and hide all content below it"
      },
      "open": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the dialog is open"
      },
      "persistentElements": {
        "type": "(() => Element)[]",
        "isRequired": false,
        "description": "Returns the persistent elements that:\n- should not have pointer-events disabled\n- should not trigger the dismiss event"
      },
      "preventScroll": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to prevent scrolling behind the dialog when it's opened"
      },
      "restoreFocus": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to restore focus to the element that had focus before the dialog was opened"
      },
      "role": {
        "type": "'dialog' | 'alertdialog'",
        "defaultValue": "\"dialog\"",
        "isRequired": false,
        "description": "The dialog's role"
      },
      "trapFocus": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to trap focus inside the dialog when it's opened"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "MachineApi<PropTypes>", "isRequired": true },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "Title": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Trigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  }
}
