{
  "ClearTrigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Column": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Content": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Control": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "HourCell": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "value": { "type": "number", "isRequired": true }
    }
  },
  "Input": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "index": { "type": "number", "isRequired": false }
    }
  },
  "Label": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "MinuteCell": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "value": { "type": "number", "isRequired": true }
    }
  },
  "PeriodCell": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "value": { "type": "number", "isRequired": true }
    }
  },
  "Positioner": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Root": {
    "emits": {
      "onFocusChange": {
        "type": "[details: FocusChangeDetails]",
        "isRequired": false,
        "description": "Function called when the focused time changes."
      },
      "onOpenChange": {
        "type": "[details: OpenChangeDetails]",
        "isRequired": false,
        "description": "Function called when the calendar opens or closes."
      },
      "onValueChange": {
        "type": "[details: ValueChangeDetails]",
        "isRequired": false,
        "description": "Function called when the value changes."
      }
    },
    "props": {
      "allowSeconds": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to show the seconds"
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the calendar is disabled."
      },
      "disableLayer": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to disable the interaction outside logic"
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{ trigger: string; input: string; positioner: string; content: string; clearTrigger: string; control: string; column(unit: TimeUnit): 'hour' | 'minute' | 'second' | 'period' }>",
        "isRequired": false,
        "description": "The ids of the elements in the time picker. Useful for composition."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "locale": {
        "type": "string",
        "defaultValue": "\"en-US\"",
        "isRequired": false,
        "description": "The locale (BCP 47 language tag) to use when formatting the time."
      },
      "max": {
        "type": "Time",
        "isRequired": false,
        "description": "The maximum time for that can be selected"
      },
      "min": {
        "type": "Time",
        "isRequired": false,
        "description": "The minimum time for that can be selected"
      },
      "modelValue": {
        "type": "Time | null",
        "isRequired": false,
        "description": "The v-model value of the time picker"
      },
      "name": {
        "type": "string",
        "isRequired": false,
        "description": "The `name` attribute of the input element."
      },
      "open": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the timepicker is open"
      },
      "placeholder": {
        "type": "string",
        "isRequired": false,
        "description": "The placeholder text of the input"
      },
      "positioning": {
        "type": "PositioningOptions",
        "isRequired": false,
        "description": "The user provided options used to position the time picker content"
      },
      "readOnly": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the calendar is read-only."
      },
      "steps": {
        "type": "{ hour?: number; minute?: number; second?: number }",
        "isRequired": false,
        "description": "The steps of each time unit"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "MachineApi<PropTypes>", "isRequired": true },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "SecondCell": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "value": { "type": "number", "isRequired": true }
    }
  },
  "Spacer": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Trigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  }
}
