{
  "Cell": {
    "props": {
      "value": { "type": "number | TimePeriod", "isRequired": true },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "ClearTrigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Column": {
    "props": {
      "unit": { "type": "TimeUnit", "isRequired": true },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Content": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Control": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Input": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Label": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Positioner": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Root": {
    "props": {
      "allowSeconds": { "type": "boolean", "isRequired": false, "description": "Whether to show the seconds." },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "defaultOpen": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the timepicker open state is controlled by the user"
      },
      "defaultValue": {
        "type": "Time",
        "isRequired": false,
        "description": "The initial selected time when rendered.\nUse when you don't need to control the selected time."
      },
      "disabled": { "type": "boolean", "isRequired": false, "description": "Whether the time picker is disabled." },
      "disableLayer": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to disable the interaction outside logic"
      },
      "id": { "type": "string", "isRequired": false, "description": "The unique identifier of the machine." },
      "ids": {
        "type": "Partial<{\n  trigger: string\n  input: string\n  positioner: string\n  content: string\n  clearTrigger: string\n  control: string\n  column(unit: TimeUnit): string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the date picker. Useful for composition."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "locale": {
        "type": "string",
        "isRequired": false,
        "description": "The locale (BCP 47 language tag) to use when formatting the time."
      },
      "max": { "type": "Time", "isRequired": false, "description": "The maximum time that can be selected." },
      "min": { "type": "Time", "isRequired": false, "description": "The minimum time that can be selected." },
      "modelValue": { "type": "Time", "isRequired": false, "description": "The v-model value of the time picker" },
      "name": { "type": "string", "isRequired": false, "description": "The `name` attribute of the input element." },
      "open": { "type": "boolean", "isRequired": false, "description": "Whether the timepicker is open" },
      "placeholder": { "type": "string", "isRequired": false, "description": "The placeholder text of the input." },
      "positioning": {
        "type": "PositioningOptions",
        "isRequired": false,
        "description": "The user provided options used to position the time picker content"
      },
      "readOnly": { "type": "boolean", "isRequired": false, "description": "Whether the time picker is read-only." },
      "steps": {
        "type": "{ hour?: number | undefined; minute?: number | undefined; second?: number | undefined }",
        "isRequired": false,
        "description": "The steps of each time unit."
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "TimePickerApi<PropTypes>", "isRequired": true },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "Spacer": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Trigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  }
}
