{
  "Anchor": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Arrow": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "ArrowTip": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "CloseTrigger": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Content": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Description": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Indicator": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Positioner": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Root": {
    "emits": {
      "escapeKeyDown": {
        "type": "[event: KeyboardEvent]",
        "isRequired": true,
        "description": "Function called when the escape key is pressed"
      },
      "focusOutside": {
        "type": "[event: FocusOutsideEvent]",
        "isRequired": true,
        "description": "Function called when the focus is moved outside the component"
      },
      "interactOutside": {
        "type": "[event: InteractOutsideEvent]",
        "isRequired": true,
        "description": "Function called when an interaction happens outside the component"
      },
      "openChange": {
        "type": "[details: OpenChangeDetails]",
        "isRequired": true,
        "description": "Function invoked when the popover opens or closes"
      },
      "pointerDownOutside": {
        "type": "[event: PointerDownOutsideEvent]",
        "isRequired": true,
        "description": "Function called when the pointer is pressed down outside the component"
      },
      "update:open": { "type": "[open: boolean]", "isRequired": true }
    },
    "props": {
      "autoFocus": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to automatically set focus on the first focusable\ncontent within the popover when opened."
      },
      "closeOnEscape": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to close the popover when the escape key is pressed."
      },
      "closeOnInteractOutside": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether to close the popover when the user clicks outside of the popover."
      },
      "defaultOpen": {
        "type": "boolean",
        "isRequired": false,
        "description": "The initial open state of the popover when it is first rendered.\nUse when you do not need to control its open state."
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{\n  anchor: string\n  trigger: string\n  content: string\n  title: string\n  description: string\n  closeTrigger: string\n  positioner: string\n  arrow: string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the popover. Useful for composition."
      },
      "initialFocusEl": {
        "type": "() => HTMLElement",
        "isRequired": false,
        "description": "The element to focus on when the popover is opened."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "modal": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether the popover should be modal. When set to `true`:\n- interaction with outside elements will be disabled\n- only popover content will be visible to screen readers\n- scrolling is blocked\n- focus is trapped within the popover"
      },
      "open": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the popover is open"
      },
      "persistentElements": {
        "type": "(() => Element)[]",
        "isRequired": false,
        "description": "Returns the persistent elements that:\n- should not have pointer-events disabled\n- should not trigger the dismiss event"
      },
      "portalled": {
        "type": "boolean",
        "defaultValue": "true",
        "isRequired": false,
        "description": "Whether the popover is portalled. This will proxy the tabbing behavior regardless of the DOM position\nof the popover content."
      },
      "positioning": {
        "type": "PositioningOptions",
        "isRequired": false,
        "description": "The user provided options used to position the popover content"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "Title": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Trigger": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  }
}
