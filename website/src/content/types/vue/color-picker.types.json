{
  "AreaBackground": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Area": {
    "props": {
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "xChannel": { "type": "ColorChannel", "isRequired": false },
      "yChannel": { "type": "ColorChannel", "isRequired": false }
    }
  },
  "AreaThumb": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "ChannelInput": {
    "props": {
      "channel": { "type": "ExtendedColorChannel", "isRequired": true },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "orientation": { "type": "Orientation", "isRequired": false }
    }
  },
  "ChannelSlider": {
    "props": {
      "channel": { "type": "ColorChannel", "isRequired": true },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "orientation": { "type": "Orientation", "isRequired": false }
    }
  },
  "ChannelSliderThumb": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "ChannelSliderTrack": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Content": {
    "props": {
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "present": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the node is present (controlled by the user)"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "Control": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "EyeDropperTrigger": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "FormatSelect": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "FormatTrigger": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "HiddenInput": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Label": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Positioner": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Root": {
    "emits": {
      "focusOutside": {
        "type": "[event: FocusOutsideEvent]",
        "isRequired": true,
        "description": "Function called when the focus is moved outside the component"
      },
      "formatChange": {
        "type": "[details: FormatChangeDetails]",
        "isRequired": true,
        "description": "Function called when the color format changes"
      },
      "interactOutside": {
        "type": "[event: InteractOutsideEvent]",
        "isRequired": true,
        "description": "Function called when an interaction happens outside the component"
      },
      "openChange": {
        "type": "[details: OpenChangeDetails]",
        "isRequired": true,
        "description": "Handler that is called when the user opens or closes the color picker."
      },
      "pointerDownOutside": {
        "type": "[event: PointerDownOutsideEvent]",
        "isRequired": true,
        "description": "Function called when the pointer is pressed down outside the component"
      },
      "update:modelValue": {
        "type": "[value: string]",
        "isRequired": true,
        "description": "The callback fired when the model value changes."
      },
      "update:open": { "type": "[open: boolean]", "isRequired": true },
      "valueChange": {
        "type": "[details: ValueChangeDetails]",
        "isRequired": true,
        "description": "Handler that is called when the value changes, as the user drags."
      },
      "valueChangeEnd": {
        "type": "[details: ValueChangeDetails]",
        "isRequired": true,
        "description": "Handler that is called when the user stops dragging."
      }
    },
    "props": {
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "closeOnSelect": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to close the color picker when a swatch is selected"
      },
      "defaultOpen": {
        "type": "boolean",
        "isRequired": false,
        "description": "The initial open state of the color picker."
      },
      "defaultValue": {
        "type": "string",
        "isRequired": false,
        "description": "The initial value of the color picker when it is first rendered.\nUse when you do not need to control the state of the color picker."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the color picker is disabled"
      },
      "format": {
        "type": "ColorFormat",
        "defaultValue": "\"rgba\"",
        "isRequired": false,
        "description": "The color format to use"
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{\n  root: string\n  control: string\n  trigger: string\n  label: string\n  input: string\n  content: string\n  area: string\n  areaGradient: string\n  areaThumb: string\n  channelInput(id: string): string\n  channelSliderTrack(id: ColorChannel): string\n  channelSliderThumb(id: ColorChannel): string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the color picker. Useful for composition."
      },
      "initialFocusEl": {
        "type": "() => HTMLElement | null",
        "isRequired": false,
        "description": "The initial focus element when the color picker is opened."
      },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "modelValue": { "type": "string", "isRequired": false },
      "name": {
        "type": "string",
        "isRequired": false,
        "description": "The name for the form input"
      },
      "open": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the color picker is open"
      },
      "positioning": {
        "type": "PositioningOptions",
        "isRequired": false,
        "description": "The positioning options for the color picker"
      },
      "readOnly": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the color picker is read-only"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "MachineApi<PropTypes>", "isRequired": true },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "lazyMount": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to enable lazy mounting"
      },
      "unmountOnExit": {
        "type": "boolean",
        "defaultValue": "false",
        "isRequired": false,
        "description": "Whether to unmount on exit."
      }
    }
  },
  "SwatchGroup": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "SwatchIndicator": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Swatch": {
    "props": {
      "value": { "type": "string | Color", "isRequired": true, "description": "The color value" },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "respectAlpha": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to include the alpha channel in the color"
      }
    }
  },
  "SwatchTrigger": {
    "props": {
      "value": { "type": "string | Color", "isRequired": true, "description": "The color value" },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the swatch trigger is disabled"
      }
    }
  },
  "TransparencyGrid": {
    "props": {
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "size": { "type": "string", "isRequired": false }
    }
  },
  "Trigger": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "ValueText": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "View": {
    "props": {
      "format": { "type": "ColorFormat", "isRequired": true },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false }
    }
  }
}
