{
  "Control": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "HiddenInput": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Label": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "MarkerGroup": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Marker": {
    "props": {
      "value": { "type": "number", "isRequired": true },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false }
    }
  },
  "Range": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "Root": {
    "emits": {
      "focusChange": {
        "type": "[details: FocusChangeDetails]",
        "isRequired": true,
        "description": "Function invoked when the slider's focused index changes"
      },
      "update:modelValue": {
        "type": "[value: number[]]",
        "isRequired": true,
        "description": "The callback fired when the model value changes."
      },
      "valueChange": {
        "type": "[details: ValueChangeDetails]",
        "isRequired": true,
        "description": "Function invoked when the value of the slider changes"
      },
      "valueChangeEnd": {
        "type": "[details: ValueChangeDetails]",
        "isRequired": true,
        "description": "Function invoked when the slider value change is done"
      }
    },
    "props": {
      "aria-label": {
        "type": "string[]",
        "isRequired": false,
        "description": "The aria-label of each slider thumb. Useful for providing an accessible name to the slider"
      },
      "aria-labelledby": {
        "type": "string[]",
        "isRequired": false,
        "description": "The `id` of the elements that labels each slider thumb. Useful for providing an accessible name to the slider"
      },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "defaultValue": {
        "type": "number[]",
        "isRequired": false,
        "description": "The initial value of the slider when it is first rendered.\nUse when you do not need to control the state of the slider."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the slider is disabled"
      },
      "form": {
        "type": "string",
        "isRequired": false,
        "description": "The associate form of the underlying input element."
      },
      "getAriaValueText": {
        "type": "(details: ValueTextDetails) => string",
        "isRequired": false,
        "description": "Function that returns a human readable value for the slider thumb"
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{\n  root: string\n  thumb(index: number): string\n  control: string\n  track: string\n  range: string\n  label: string\n  valueText: string\n  marker(index: number): string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the range slider. Useful for composition."
      },
      "invalid": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the slider is invalid"
      },
      "max": {
        "type": "number",
        "defaultValue": "100",
        "isRequired": false,
        "description": "The maximum value of the slider"
      },
      "min": {
        "type": "number",
        "defaultValue": "0",
        "isRequired": false,
        "description": "The minimum value of the slider"
      },
      "minStepsBetweenThumbs": {
        "type": "number",
        "defaultValue": "0",
        "isRequired": false,
        "description": "The minimum permitted steps between multiple thumbs."
      },
      "modelValue": { "type": "number[]", "isRequired": false },
      "name": {
        "type": "string",
        "isRequired": false,
        "description": "The name associated with each slider thumb (when used in a form)"
      },
      "orientation": {
        "type": "'horizontal' | 'vertical'",
        "defaultValue": "\"horizontal\"",
        "isRequired": false,
        "description": "The orientation of the slider"
      },
      "origin": {
        "type": "'start' | 'center'",
        "defaultValue": "\"start\"",
        "isRequired": false,
        "description": "The origin of the slider range\n- \"start\": Useful when the value represents an absolute value\n- \"center\": Useful when the value represents an offset (relative)"
      },
      "readOnly": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the slider is read-only"
      },
      "step": {
        "type": "number",
        "defaultValue": "1",
        "isRequired": false,
        "description": "The step value of the slider"
      },
      "thumbAlignment": {
        "type": "'center' | 'contain'",
        "defaultValue": "\"contain\"",
        "isRequired": false,
        "description": "The alignment of the slider thumb relative to the track\n- `center`: the thumb will extend beyond the bounds of the slider track.\n- `contain`: the thumb will be contained within the bounds of the track."
      },
      "thumbSize": {
        "type": "{ width: number; height: number }",
        "isRequired": false,
        "description": "The slider thumbs dimensions"
      }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "MachineApi<PropTypes>", "isRequired": true },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false }
    }
  },
  "Thumb": {
    "props": {
      "index": { "type": "number", "isRequired": true },
      "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false },
      "name": { "type": "string", "isRequired": false }
    }
  },
  "Track": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  },
  "ValueText": {
    "props": { "asChild": { "type": "boolean", "defaultValue": "false", "isRequired": false } }
  }
}
