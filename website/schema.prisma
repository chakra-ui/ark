datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime     @default(now())
  accounts      Account[]
  licenseKeys   LicenseKey[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Order {
  id         String      @id @default(cuid())
  externalId String      @unique
  refunded   Boolean     @default(false)
  provider   Provider
  orderItems OrderItem[]
  createdAt  DateTime    @default(now())
}

model OrderItem {
  id           String     @id @default(cuid())
  orderId      String
  order        Order      @relation(fields: [orderId], references: [id], onDelete: Cascade)
  licenseKeyId String     @unique
  licenseKey   LicenseKey @relation(fields: [licenseKeyId], references: [id])
  productName  String
}

model LicenseKey {
  id        String      @id @default(cuid())
  key       String      @unique
  disabled  Boolean     @default(false)
  type      LicenseType @default(Personal)
  orderItem OrderItem?
  userId    String?
  user      User?       @relation(fields: [userId], references: [id])
}

enum Provider {
  LemonSqueezy
}

enum LicenseType {
  Personal
  Team
}

