{
  "RangeSliderProps": {
    "aria-label": {
      "type": "string[]",
      "isRequired": false,
      "description": "The aria-label of each slider thumb. Useful for providing an accessible name to the slider"
    },
    "aria-labelledby": {
      "type": "string[]",
      "isRequired": false,
      "description": "The `id` of the elements that labels each slider thumb. Useful for providing an accessible name to the slider"
    },
    "defaultValue": { "type": "number[]", "isRequired": false },
    "dir": {
      "type": "'ltr' | 'rtl'",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the slider is disabled"
    },
    "form": {
      "type": "string",
      "isRequired": false,
      "description": "The associate form of the underlying input element."
    },
    "getAriaValueText": {
      "type": "(value: number, index: number) => string",
      "isRequired": false,
      "description": "Function that returns a human readable value for the slider thumb"
    },
    "getRootNode": {
      "type": "() => ShadowRoot | Node | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{\n  root: string\n  thumb(index: number): string\n  control: string\n  track: string\n  range: string\n  label: string\n  output: string\n  marker(index: number): string\n}>",
      "isRequired": false,
      "description": "The ids of the elements in the range slider. Useful for composition."
    },
    "invalid": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the slider is invalid"
    },
    "max": {
      "type": "number",
      "isRequired": false,
      "description": "The maximum value of the slider"
    },
    "min": {
      "type": "number",
      "isRequired": false,
      "description": "The minimum value of the slider"
    },
    "minStepsBetweenThumbs": {
      "type": "number",
      "isRequired": false,
      "description": "The minimum permitted steps between multiple thumbs."
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The name associated with each slider thumb (when used in a form)"
    },
    "onFocusChange": {
      "type": "(details: FocusChangeDetails) => void",
      "isRequired": false,
      "description": "Function invoked when the slider's focused index changes"
    },
    "onValueChange": {
      "type": "(details: ValueChangeDetails) => void",
      "isRequired": false,
      "description": "Function invoked when the value of the slider changes"
    },
    "onValueChangeEnd": {
      "type": "(details: ValueChangeDetails) => void",
      "isRequired": false,
      "description": "Function invoked when the slider value change is done"
    },
    "onValueChangeStart": {
      "type": "(details: ValueChangeDetails) => void",
      "isRequired": false,
      "description": "Function invoked when the slider value change is started"
    },
    "orientation": {
      "type": "'horizontal' | 'vertical'",
      "isRequired": false,
      "description": "The orientation of the slider"
    },
    "readOnly": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the slider is read-only"
    },
    "step": {
      "type": "number",
      "isRequired": false,
      "description": "The step value of the slider"
    },
    "thumbAlignment": {
      "type": "'center' | 'contain'",
      "isRequired": false,
      "description": "The alignment of the slider thumb relative to the track\n- `center`: the thumb will extend beyond the bounds of the slider track.\n- `contain`: the thumb will be contained within the bounds of the track."
    },
    "thumbSize": {
      "type": "{ width: number; height: number }",
      "isRequired": false,
      "description": "The slider thumbs dimensions"
    },
    "value": {
      "type": "number[]",
      "isRequired": false,
      "description": "The value of the range slider"
    }
  },
  "RangeSliderContext": {
    "controlProps": { "type": "Dict<any>", "isRequired": true },
    "decrement": {
      "type": "(index: number) => void",
      "isRequired": true,
      "description": "Function to decrement the value of the slider at the given index."
    },
    "focus": {
      "type": "() => void",
      "isRequired": true,
      "description": "Function to focus the slider. This focuses the first thumb."
    },
    "getHiddenInputProps": { "type": "(index: number) => Dict<any>", "isRequired": true },
    "getMarkerProps": { "type": "(props: MarkerProps) => Dict<any>", "isRequired": true },
    "getPercentValue": {
      "type": "(percent: number) => number",
      "isRequired": true,
      "description": "Returns the value of the thumb at the given percent."
    },
    "getThumbMax": {
      "type": "(index: number) => number",
      "isRequired": true,
      "description": "Returns the max value of the thumb at the given index."
    },
    "getThumbMin": {
      "type": "(index: number) => number",
      "isRequired": true,
      "description": "Returns the min value of the thumb at the given index."
    },
    "getThumbPercent": {
      "type": "(index: number) => number",
      "isRequired": true,
      "description": "Returns the percent of the thumb at the given index."
    },
    "getThumbProps": { "type": "(index: number) => Dict<any>", "isRequired": true },
    "getThumbValue": {
      "type": "(index: number) => number",
      "isRequired": true,
      "description": "Returns the value of the thumb at the given index."
    },
    "getValuePercent": {
      "type": "(value: number) => number",
      "isRequired": true,
      "description": "Returns the percent of the thumb at the given index."
    },
    "increment": {
      "type": "(index: number) => void",
      "isRequired": true,
      "description": "Function to increment the value of the slider at the given index."
    },
    "isDragging": {
      "type": "boolean",
      "isRequired": true,
      "description": "Whether the slider is being dragged."
    },
    "isFocused": {
      "type": "boolean",
      "isRequired": true,
      "description": "Whether the slider is focused."
    },
    "labelProps": { "type": "Dict<any>", "isRequired": true },
    "markerGroupProps": { "type": "Dict<any>", "isRequired": true },
    "outputProps": { "type": "Dict<any>", "isRequired": true },
    "rangeProps": { "type": "Dict<any>", "isRequired": true },
    "rootProps": { "type": "Dict<any>", "isRequired": true },
    "setThumbPercent": {
      "type": "(index: number, percent: number) => void",
      "isRequired": true,
      "description": "Sets the percent of the thumb at the given index."
    },
    "setThumbValue": {
      "type": "(index: number, value: number) => void",
      "isRequired": true,
      "description": "Sets the value of the thumb at the given index."
    },
    "setValue": {
      "type": "(value: number[]) => void",
      "isRequired": true,
      "description": "Function to set the value of the slider."
    },
    "trackProps": { "type": "Dict<any>", "isRequired": true },
    "value": { "type": "number[]", "isRequired": true, "description": "The value of the slider." }
  },
  "RangeSliderThumbProps": { "index": { "type": "number", "isRequired": true } },
  "RangeSliderMarkerProps": { "value": { "type": "number", "isRequired": true } }
}
