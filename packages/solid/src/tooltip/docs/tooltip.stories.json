{
  "Basic": "const Basic = () => (\n  <Tooltip>\n    <TooltipTrigger>Hover Me</TooltipTrigger>\n    <Portal>\n      <TooltipPositioner>\n        <TooltipContent>I am a tooltip!</TooltipContent>\n      </TooltipPositioner>\n    </Portal>\n  </Tooltip>\n)",
  "Controlled": "const Controlled = () => {\n  const [isOpen, setIsOpen] = createSignal(false)\n  return (\n    <>\n      <button onClick={() => setIsOpen(!isOpen())}>Toggle</button>\n      <Tooltip open={isOpen()}>\n        <TooltipTrigger>Hover Me</TooltipTrigger>\n        <Portal>\n          <TooltipPositioner>\n            <TooltipContent>I am a tooltip!</TooltipContent>\n          </TooltipPositioner>\n        </Portal>\n      </Tooltip>\n    </>\n  )\n}",
  "Arrow": "const Arrow = () => (\n  <Tooltip>\n    <TooltipTrigger>Hove Me</TooltipTrigger>\n    <Portal>\n      <TooltipPositioner>\n        <TooltipArrow>\n          <TooltipArrowTip />\n        </TooltipArrow>\n        <TooltipContent>I am a tooltip!</TooltipContent>\n      </TooltipPositioner>\n    </Portal>\n  </Tooltip>\n)",
  "Timings": "const Timings = () => (\n  <Tooltip closeDelay={0} openDelay={0}>\n    <TooltipTrigger>Hover Me</TooltipTrigger>\n    <Portal>\n      <TooltipPositioner>\n        <TooltipContent>I am a tooltip!</TooltipContent>\n      </TooltipPositioner>\n    </Portal>\n  </Tooltip>\n)",
  "Positioning": "const Positioning = () => (\n  <Tooltip\n    positioning={{ placement: 'left-start', gutter: 16, offset: { mainAxis: 12, crossAxis: 12 } }}\n  >\n    <TooltipTrigger>Hover Me</TooltipTrigger>\n    <Portal>\n      <TooltipPositioner>\n        <TooltipContent>I am a tooltip!</TooltipContent>\n      </TooltipPositioner>\n    </Portal>\n  </Tooltip>\n)"
}
