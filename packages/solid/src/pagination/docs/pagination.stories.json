{
  "Basic": "const Basic = () => (\n  <Pagination count={5000} pageSize={10} siblingCount={2}>\n    {(api) => (\n      <PaginationList>\n        <PaginationListItem>\n          <PaginationPrevPageTrigger>\n            Previous <span class=\"visually-hidden\">Page</span>\n          </PaginationPrevPageTrigger>\n        </PaginationListItem>\n\n        <For each={api().pages}>\n          {(page, index) =>\n            page.type === 'page' ? (\n              <PaginationListItem>\n                <PaginationPageTrigger value={page.value}>{page.value}</PaginationPageTrigger>\n              </PaginationListItem>\n            ) : (\n              <PaginationListItem>\n                <PaginationEllipsis index={index()}>&#8230;</PaginationEllipsis>\n              </PaginationListItem>\n            )\n          }\n        </For>\n        <PaginationListItem>\n          <PaginationNextPageTrigger>\n            Next <span class=\"visually-hidden\">Page</span>\n          </PaginationNextPageTrigger>\n        </PaginationListItem>\n      </PaginationList>\n    )}\n  </Pagination>\n)",
  "Controlled": "const Controlled = () => {\n  const [currentPage, setCurrentPage] = createSignal(1)\n\n  return (\n    <Pagination\n      count={5000}\n      pageSize={10}\n      siblingCount={2}\n      page={currentPage()}\n      onChange={(details) => setCurrentPage(details.page)}\n    >\n      {/* ... */}\n    </Pagination>\n  )\n}",
  "Customized": "const Customized = () => {\n  return (\n    <Pagination\n      count={5000}\n      pageSize={20}\n      siblingCount={3}\n      dir=\"ltr\"\n      translations={{\n        nextPageTriggerLabel: 'Next',\n        prevPageTriggerLabel: 'Prev',\n        pageTriggerLabel: (details) => `Page ${details.page}`,\n      }}\n    >\n      {/* ... */}\n    </Pagination>\n  )\n}"
}
