{
  "AccordionProps": {
    "collapsible": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether an accordion item can be collapsed after it has been opened."
    },
    "defaultValue": { "type": "string | string[]", "isRequired": false },
    "dir": {
      "type": "Direction",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the accordion items are disabled"
    },
    "getRootNode": {
      "type": "() => ShadowRoot | Node | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "ids": {
      "type": "Partial<{\n  root: string\n  item(value: string): string\n  content(value: string): string\n  trigger(value: string): string\n}>",
      "isRequired": false,
      "description": "The ids of the elements in the accordion. Useful for composition."
    },
    "modelValue": { "type": "string | string[]", "isRequired": false },
    "multiple": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether multple accordion items can be open at the same time."
    },
    "onChange": {
      "type": "(details: { value: string | string[] | null }) => void",
      "isRequired": false,
      "description": "The callback fired when the state of opened/closed accordion items changes."
    }
  },
  "AccordionItemProps": {
    "value": { "type": "string", "isRequired": true },
    "disabled": { "type": "boolean", "isRequired": false }
  },
  "AccordionItemContext": {
    "value": { "type": "string", "isRequired": true },
    "disabled": { "type": "boolean", "isRequired": false }
  },
  "UseAccordionProps": {
    "context": { "type": "Omit<AccordionProps, 'id'>", "isRequired": true },
    "emit": { "type": "CallableFunction", "isRequired": true },
    "defaultValue": { "type": "string | string[]", "isRequired": false }
  },
  "UseAccordionReturn": {
    "api": {
      "type": "ComputedRef<{ value: string | string[] | null; setValue(value: string | string[]): void; rootProps: Attrs<HTMLAttributes>; getItemState(props: ItemProps): { ...; }; getItemProps(props: ItemProps): Attrs<...>; getContentProps(props: ItemProps): Attrs<...>; getTriggerProps(props: ItemProps): ElementAttrs<...>; }>",
      "isRequired": true
    }
  }
}
