{
  "Basic": "const Basic = () => {\n  const [value, setValue] = useState('apple')\n  return (\n    <SegmentedGroup onChange={({ value }) => setValue(value)}>\n      <SegmentedGroupLabel>Fruits: {value}</SegmentedGroupLabel>\n      {options.map((option, id) => (\n        <Segmented\n          key={id}\n          value={option.id}\n          style={{ fontWeight: option.id === value ? 'bold' : 'inherit' }}\n        >\n          <SegmentedLabel>{option.label}</SegmentedLabel>\n          <SegmentedInput />\n          <SegmentedControl />\n        </Segmented>\n      ))}\n    </SegmentedGroup>\n  )\n}",
  "Disabled": "const Disabled = () => {\n  const [value, setValue] = useState('apple')\n  return (\n    <SegmentedGroup onChange={({ value }) => setValue(value)}>\n      <SegmentedGroupLabel asChild>Fruits: {value}</SegmentedGroupLabel>\n      {options.map((option, id) => (\n        <Segmented\n          key={id}\n          value={option.id}\n          disabled={option.id === 'mango'}\n          style={{\n            color: option.id === 'mango' ? 'lightgray' : 'inherit',\n            fontWeight: option.id === value ? 'bold' : 'inherit',\n          }}\n        >\n          <SegmentedLabel>{option.label}</SegmentedLabel>\n          <SegmentedInput />\n          <SegmentedControl />\n        </Segmented>\n      ))}\n    </SegmentedGroup>\n  )\n}"
}
