{
  "Basic": "const Basic = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root>\n      {items.map((item, id) => (\n        <Accordion.Item key={id} value={item}>\n          <Accordion.Trigger>{item} trigger</Accordion.Trigger>\n          <Accordion.Content lazyMount unmountOnExit>\n            {item} content\n          </Accordion.Content>\n        </Accordion.Item>\n      ))}\n    </Accordion.Root>\n  )\n}",
  "Initial": "const Initial = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root defaultValue={['panel-2']}>\n      {items.map((item, id) => (\n        <Accordion.Item key={id} value={item}>\n          <Accordion.Trigger>{item} trigger</Accordion.Trigger>\n          <Accordion.Content>{item} content</Accordion.Content>\n        </Accordion.Item>\n      ))}\n    </Accordion.Root>\n  )\n}",
  "RenderProp": "const RenderProp = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root>\n      {items.map((item, id) => (\n        <Accordion.Item key={id} value={item}>\n          {(api) => (\n            <>\n              <Accordion.Trigger>{api.isOpen ? 'Close' : 'Open'}</Accordion.Trigger>\n              <Accordion.Content>{item} content</Accordion.Content>\n            </>\n          )}\n        </Accordion.Item>\n      ))}\n    </Accordion.Root>\n  )\n}",
  "Collapsible": "const Collapsible = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root collapsible>\n      {items.map((item, id) => (\n        <Accordion.Item key={id} value={item}>\n          <Accordion.Trigger>{item} trigger</Accordion.Trigger>\n          <Accordion.Content>{item} content</Accordion.Content>\n        </Accordion.Item>\n      ))}\n    </Accordion.Root>\n  )\n}",
  "Multiple": "const Multiple = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root multiple>\n      {items.map((item, id) => (\n        <Accordion.Item key={id} value={item}>\n          <Accordion.Trigger>{item} trigger</Accordion.Trigger>\n          <Accordion.Content>{item} content</Accordion.Content>\n        </Accordion.Item>\n      ))}\n    </Accordion.Root>\n  )\n}",
  "Controlled": "const Controlled = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  const [value, setValue] = useState<string[]>([])\n  return (\n    <Accordion.Root value={value} onChange={(details) => setValue(details.value)}>\n      {items.map((item, id) => (\n        <Accordion.Item key={id} value={item}>\n          <Accordion.Trigger>{item} trigger</Accordion.Trigger>\n          <Accordion.Content>{item} content</Accordion.Content>\n        </Accordion.Item>\n      ))}\n    </Accordion.Root>\n  )\n}",
  "Vertical": "const Vertical = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root orientation=\"vertical\">\n      {items.map((item, id) => (\n        <Accordion.Item key={id} value={item} disabled={item === 'panel-2'}>\n          <Accordion.Trigger>{item} trigger</Accordion.Trigger>\n          <Accordion.Content>{item} content</Accordion.Content>\n        </Accordion.Item>\n      ))}\n    </Accordion.Root>\n  )\n}",
  "Disabled": "const Disabled = () => {\n  const items = ['panel-1', 'panel-2', 'panel-3']\n  return (\n    <Accordion.Root multiple>\n      {items.map((item, id) => (\n        <Accordion.Item key={id} value={item} disabled={item === 'panel-2'}>\n          <Accordion.Trigger>{item} trigger</Accordion.Trigger>\n          <Accordion.Content>{item} content</Accordion.Content>\n        </Accordion.Item>\n      ))}\n    </Accordion.Root>\n  )\n}"
}
