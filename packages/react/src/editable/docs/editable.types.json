{
  "EditableProps": {
    "activationMode": {
      "type": "ActivationMode",
      "isRequired": false,
      "description": "The activation mode for the preview element.\n\n- \"focus\" - Enter edit mode when the preview element is focused\n- \"dblclick\" - Enter edit mode when the preview element is double-clicked\n- \"none\" - No interaction with the preview element will trigger edit mode."
    },
    "autoResize": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the editable should auto-resize to fit the content."
    },
    "defaultValue": { "type": "string", "isRequired": false },
    "dir": {
      "type": "Direction",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the editable is disabled"
    },
    "form": {
      "type": "string",
      "isRequired": false,
      "description": "The associate form of the underlying input."
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{ root: string; area: string; label: string; preview: string; input: string; controls: string; submitTrigger: string; cancelTrigger: string; editTrigger: string; }>",
      "isRequired": false,
      "description": "The ids of the elements in the editable. Useful for composition."
    },
    "invalid": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the input's value is invalid."
    },
    "maxLength": {
      "type": "number",
      "isRequired": false,
      "description": "The maximum number of characters allowed in the editable"
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The name attribute of the editable component. Used for form submission."
    },
    "onCancel": {
      "type": "(details: { value: string; }) => void",
      "isRequired": false,
      "description": "The callback that is called when the esc key is pressed or the cancel button is clicked"
    },
    "onChange": {
      "type": "(details: { value: string; }) => void",
      "isRequired": false,
      "description": "The callback that is called when the editable's value is changed"
    },
    "onEdit": {
      "type": "() => void",
      "isRequired": false,
      "description": "The callback that is called when in the edit mode."
    },
    "onSubmit": {
      "type": "(details: { value: string; }) => void",
      "isRequired": false,
      "description": "The callback that is called when the editable's value is submitted."
    },
    "placeholder": {
      "type": "string | { edit: string; preview: string; }",
      "isRequired": false,
      "description": "The placeholder value to show when the `value` is empty"
    },
    "readOnly": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the editable is readonly"
    },
    "selectOnFocus": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to select the text in the input when it is focused."
    },
    "startWithEditView": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to start with the edit mode active."
    },
    "submitMode": {
      "type": "SubmitMode",
      "isRequired": false,
      "description": "The action that triggers submit in the edit mode:\n\n- \"enter\" - Trigger submit when the enter key is pressed\n- \"blur\" - Trigger submit when the editable is blurred\n- \"none\" - No action will trigger submit. You need to use the submit button\n- \"both\" - Pressing `Enter` and blurring the input will trigger submit"
    },
    "translations": {
      "type": "IntlTranslations",
      "isRequired": false,
      "description": "Specifies the localized strings that identifies the accessibility elements and their states"
    },
    "value": {
      "type": "string",
      "isRequired": false,
      "description": "The value of the editable in both edit and preview mode"
    }
  },
  "UseEditableProps": {
    "activationMode": {
      "type": "ActivationMode",
      "isRequired": false,
      "description": "The activation mode for the preview element.\n\n- \"focus\" - Enter edit mode when the preview element is focused\n- \"dblclick\" - Enter edit mode when the preview element is double-clicked\n- \"none\" - No interaction with the preview element will trigger edit mode."
    },
    "autoResize": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the editable should auto-resize to fit the content."
    },
    "defaultValue": { "type": "string", "isRequired": false },
    "dir": {
      "type": "Direction",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the editable is disabled"
    },
    "form": {
      "type": "string",
      "isRequired": false,
      "description": "The associate form of the underlying input."
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{ root: string; area: string; label: string; preview: string; input: string; controls: string; submitTrigger: string; cancelTrigger: string; editTrigger: string; }>",
      "isRequired": false,
      "description": "The ids of the elements in the editable. Useful for composition."
    },
    "invalid": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the input's value is invalid."
    },
    "maxLength": {
      "type": "number",
      "isRequired": false,
      "description": "The maximum number of characters allowed in the editable"
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The name attribute of the editable component. Used for form submission."
    },
    "onCancel": {
      "type": "(details: { value: string; }) => void",
      "isRequired": false,
      "description": "The callback that is called when the esc key is pressed or the cancel button is clicked"
    },
    "onChange": {
      "type": "(details: { value: string; }) => void",
      "isRequired": false,
      "description": "The callback that is called when the editable's value is changed"
    },
    "onEdit": {
      "type": "() => void",
      "isRequired": false,
      "description": "The callback that is called when in the edit mode."
    },
    "onSubmit": {
      "type": "(details: { value: string; }) => void",
      "isRequired": false,
      "description": "The callback that is called when the editable's value is submitted."
    },
    "placeholder": {
      "type": "string | { edit: string; preview: string; }",
      "isRequired": false,
      "description": "The placeholder value to show when the `value` is empty"
    },
    "readOnly": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the editable is readonly"
    },
    "selectOnFocus": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to select the text in the input when it is focused."
    },
    "startWithEditView": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to start with the edit mode active."
    },
    "submitMode": {
      "type": "SubmitMode",
      "isRequired": false,
      "description": "The action that triggers submit in the edit mode:\n\n- \"enter\" - Trigger submit when the enter key is pressed\n- \"blur\" - Trigger submit when the editable is blurred\n- \"none\" - No action will trigger submit. You need to use the submit button\n- \"both\" - Pressing `Enter` and blurring the input will trigger submit"
    },
    "translations": {
      "type": "IntlTranslations",
      "isRequired": false,
      "description": "Specifies the localized strings that identifies the accessibility elements and their states"
    },
    "value": {
      "type": "string",
      "isRequired": false,
      "description": "The value of the editable in both edit and preview mode"
    }
  },
  "UseEditableReturn": {
    "areaProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "cancel": { "type": "() => void", "isRequired": true },
    "cancelTriggerProps": {
      "type": "DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>",
      "isRequired": true
    },
    "clearValue": { "type": "() => void", "isRequired": true },
    "controlProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "edit": { "type": "() => void", "isRequired": true },
    "editTriggerProps": {
      "type": "DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>",
      "isRequired": true
    },
    "inputProps": {
      "type": "DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>",
      "isRequired": true
    },
    "isEditing": { "type": "boolean", "isRequired": true },
    "isValueEmpty": { "type": "boolean", "isRequired": true },
    "labelProps": {
      "type": "DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>",
      "isRequired": true
    },
    "previewProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "rootProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "setValue": { "type": "(value: string) => void", "isRequired": true },
    "submit": { "type": "() => void", "isRequired": true },
    "submitTriggerProps": {
      "type": "DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>",
      "isRequired": true
    },
    "value": { "type": "string", "isRequired": true }
  }
}
