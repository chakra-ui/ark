{
  "Basic": "const Basic = () => (\n  <Popover>\n    <PopoverTrigger>Click Me</PopoverTrigger>\n    <Portal>\n      <PopoverPositioner>\n        <PopoverContent>\n          <PopoverTitle>Title</PopoverTitle>\n          <PopoverDescription>Description</PopoverDescription>\n          <PopoverCloseTrigger>Close</PopoverCloseTrigger>\n        </PopoverContent>\n      </PopoverPositioner>\n    </Portal>\n  </Popover>\n)",
  "Controlled": "const Controlled = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  return (\n    <>\n      <button onClick={() => setIsOpen(!isOpen)}>Toggle</button>\n      <Popover open={isOpen}>\n        <PopoverAnchor>Anchor</PopoverAnchor>\n        <Portal>\n          <PopoverPositioner>\n            <PopoverContent>\n              <PopoverTitle>Title</PopoverTitle>\n              <PopoverDescription>Description</PopoverDescription>\n              <PopoverCloseTrigger>Close</PopoverCloseTrigger>\n            </PopoverContent>\n          </PopoverPositioner>\n        </Portal>\n      </Popover>\n    </>\n  )\n}",
  "RenderFn": "const RenderFn = () => (\n  <Popover>\n    {({ isOpen }) => (\n      <>\n        <PopoverTrigger>Click Me</PopoverTrigger>\n        <Portal>\n          <PopoverPositioner>\n            <PopoverContent>\n              <PopoverTitle>Title</PopoverTitle>\n              <PopoverDescription>Description: {isOpen.toString()}</PopoverDescription>\n              <PopoverCloseTrigger>Close</PopoverCloseTrigger>\n            </PopoverContent>\n          </PopoverPositioner>\n        </Portal>\n      </>\n    )}\n  </Popover>\n)",
  "Arrow": "const Arrow = () => (\n  <Popover>\n    <PopoverTrigger>Click Me</PopoverTrigger>\n    <Portal>\n      <PopoverPositioner>\n        <PopoverContent>\n          <PopoverArrow>\n            <PopoverArrowTip />\n          </PopoverArrow>\n          <PopoverTitle>Title</PopoverTitle>\n          <PopoverDescription>Description</PopoverDescription>\n          <PopoverCloseTrigger>Close</PopoverCloseTrigger>\n        </PopoverContent>\n      </PopoverPositioner>\n    </Portal>\n  </Popover>\n)",
  "Animated": "const Animated = () => (\n  <Popover>\n    <PopoverTrigger>Click Me</PopoverTrigger>\n    <Portal>\n      <PopoverPositioner>\n        <PopoverContent>\n          <PopoverTitle>Title</PopoverTitle>\n          <PopoverDescription>Description</PopoverDescription>\n          <PopoverCloseTrigger>Close</PopoverCloseTrigger>\n        </PopoverContent>\n      </PopoverPositioner>\n    </Portal>\n  </Popover>\n)",
  "Positioning": "const Positioning = () => (\n  <Popover\n    positioning={{ placement: 'left-start', gutter: 16, offset: { mainAxis: 12, crossAxis: 12 } }}\n  >\n    <PopoverTrigger>Click Me</PopoverTrigger>\n    <Portal>\n      <PopoverPositioner>\n        <PopoverContent>\n          <PopoverTitle>Title</PopoverTitle>\n          <PopoverDescription>Description</PopoverDescription>\n          <PopoverCloseTrigger>Close</PopoverCloseTrigger>\n        </PopoverContent>\n      </PopoverPositioner>\n    </Portal>\n  </Popover>\n)",
  "CloseBehavior": "const CloseBehavior = () => (\n  <Popover closeOnEsc closeOnInteractOutside>\n    <PopoverTrigger>Click Me</PopoverTrigger>\n    <Portal>\n      <PopoverPositioner>\n        <PopoverContent>\n          <PopoverTitle>Title</PopoverTitle>\n          <PopoverDescription>Description</PopoverDescription>\n          <PopoverCloseTrigger>Close</PopoverCloseTrigger>\n        </PopoverContent>\n      </PopoverPositioner>\n    </Portal>\n  </Popover>\n)"
}
