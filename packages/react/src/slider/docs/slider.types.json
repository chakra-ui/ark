{
  "SliderProps": {
    "aria-label": {
      "type": "string",
      "isRequired": false,
      "description": "The aria-label of the slider. Useful for providing an accessible name to the slider"
    },
    "aria-labelledby": {
      "type": "string",
      "isRequired": false,
      "description": "The `id` of the element that labels the slider. Useful for providing an accessible name to the slider"
    },
    "defaultValue": { "type": "number", "isRequired": false },
    "dir": {
      "type": "Direction",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the slider is disabled"
    },
    "focusThumbOnChange": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to focus the slider thumb after interaction (scrub and keyboard)"
    },
    "form": {
      "type": "string",
      "isRequired": false,
      "description": "The associate form of the underlying input element."
    },
    "getAriaValueText": {
      "type": "(value: number) => string",
      "isRequired": false,
      "description": "Function that returns a human readable value for the slider"
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{\n  root: string\n  thumb: string\n  control: string\n  track: string\n  range: string\n  label: string\n  output: string\n}>",
      "isRequired": false,
      "description": "The ids of the elements in the slider. Useful for composition."
    },
    "invalid": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the slider value is invalid"
    },
    "max": {
      "type": "number",
      "isRequired": false,
      "description": "The maximum value of the slider"
    },
    "min": {
      "type": "number",
      "isRequired": false,
      "description": "The minimum value of the slider"
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The name associated with the slider (when used in a form)"
    },
    "onChange": {
      "type": "(details: { value: number }) => void",
      "isRequired": false,
      "description": "Function invoked when the value of the slider changes"
    },
    "onChangeEnd": {
      "type": "(details: { value: number }) => void",
      "isRequired": false,
      "description": "Function invoked when the slider value change is done"
    },
    "onChangeStart": {
      "type": "(details: { value: number }) => void",
      "isRequired": false,
      "description": "Function invoked when the slider value change is started"
    },
    "orientation": {
      "type": "'horizontal' | 'vertical'",
      "isRequired": false,
      "description": "The orientation of the slider"
    },
    "origin": {
      "type": "'center' | 'start'",
      "isRequired": false,
      "description": "- \"start\": Useful when the value represents an absolute value\n- \"center\": Useful when the value represents an offset (relative)"
    },
    "readOnly": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the slider is read-only"
    },
    "step": {
      "type": "number",
      "isRequired": false,
      "description": "The step value of the slider"
    },
    "thumbAlignment": {
      "type": "'center' | 'contain'",
      "isRequired": false,
      "description": "The alignment of the slider thumb relative to the track\n- `center`: the thumb will extend beyond the bounds of the slider track.\n- `contain`: the thumb will be contained within the bounds of the track."
    },
    "value": { "type": "number", "isRequired": false, "description": "The value of the slider" }
  },
  "SliderMarkerProps": { "value": { "type": "number", "isRequired": true } },
  "UseSliderProps": {
    "aria-label": {
      "type": "string",
      "isRequired": false,
      "description": "The aria-label of the slider. Useful for providing an accessible name to the slider"
    },
    "aria-labelledby": {
      "type": "string",
      "isRequired": false,
      "description": "The `id` of the element that labels the slider. Useful for providing an accessible name to the slider"
    },
    "defaultValue": { "type": "number", "isRequired": false },
    "dir": {
      "type": "Direction",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the slider is disabled"
    },
    "focusThumbOnChange": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to focus the slider thumb after interaction (scrub and keyboard)"
    },
    "form": {
      "type": "string",
      "isRequired": false,
      "description": "The associate form of the underlying input element."
    },
    "getAriaValueText": {
      "type": "(value: number) => string",
      "isRequired": false,
      "description": "Function that returns a human readable value for the slider"
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{\n  root: string\n  thumb: string\n  control: string\n  track: string\n  range: string\n  label: string\n  output: string\n}>",
      "isRequired": false,
      "description": "The ids of the elements in the slider. Useful for composition."
    },
    "invalid": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the slider value is invalid"
    },
    "max": {
      "type": "number",
      "isRequired": false,
      "description": "The maximum value of the slider"
    },
    "min": {
      "type": "number",
      "isRequired": false,
      "description": "The minimum value of the slider"
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The name associated with the slider (when used in a form)"
    },
    "onChange": {
      "type": "(details: { value: number }) => void",
      "isRequired": false,
      "description": "Function invoked when the value of the slider changes"
    },
    "onChangeEnd": {
      "type": "(details: { value: number }) => void",
      "isRequired": false,
      "description": "Function invoked when the slider value change is done"
    },
    "onChangeStart": {
      "type": "(details: { value: number }) => void",
      "isRequired": false,
      "description": "Function invoked when the slider value change is started"
    },
    "orientation": {
      "type": "'horizontal' | 'vertical'",
      "isRequired": false,
      "description": "The orientation of the slider"
    },
    "origin": {
      "type": "'center' | 'start'",
      "isRequired": false,
      "description": "- \"start\": Useful when the value represents an absolute value\n- \"center\": Useful when the value represents an offset (relative)"
    },
    "readOnly": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the slider is read-only"
    },
    "step": {
      "type": "number",
      "isRequired": false,
      "description": "The step value of the slider"
    },
    "thumbAlignment": {
      "type": "'center' | 'contain'",
      "isRequired": false,
      "description": "The alignment of the slider thumb relative to the track\n- `center`: the thumb will extend beyond the bounds of the slider track.\n- `contain`: the thumb will be contained within the bounds of the track."
    },
    "value": { "type": "number", "isRequired": false, "description": "The value of the slider" }
  },
  "UseSliderReturn": {
    "controlProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "decrement": { "type": "() => void", "isRequired": true },
    "focus": { "type": "() => void", "isRequired": true },
    "getMarkerProps": {
      "type": "({ value }: { value: number }) => HTMLAttributes<HTMLElement>",
      "isRequired": true
    },
    "getPercentValue": { "type": "(percent: number) => number", "isRequired": true },
    "getValuePercent": { "type": "(value: number) => number", "isRequired": true },
    "hiddenInputProps": {
      "type": "DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>",
      "isRequired": true
    },
    "increment": { "type": "() => void", "isRequired": true },
    "isDragging": { "type": "boolean", "isRequired": true },
    "isFocused": { "type": "boolean", "isRequired": true },
    "labelProps": {
      "type": "DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>",
      "isRequired": true
    },
    "markerGroupProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "outputProps": {
      "type": "DetailedHTMLProps<OutputHTMLAttributes<HTMLOutputElement>, HTMLOutputElement>",
      "isRequired": true
    },
    "percent": { "type": "number", "isRequired": true },
    "rangeProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "rootProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "setValue": { "type": "(value: number) => void", "isRequired": true },
    "thumbProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "trackProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "value": { "type": "number", "isRequired": true }
  }
}
