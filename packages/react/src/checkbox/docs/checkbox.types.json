{
  "CheckboxProps": {
    "aria-describedby": { "type": "string", "isRequired": false },
    "aria-label": {
      "type": "string",
      "isRequired": false,
      "description": "Defines the string that labels the checkbox element."
    },
    "aria-labelledby": { "type": "string", "isRequired": false },
    "checked": { "type": "boolean", "isRequired": false },
    "defaultChecked": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox will be initially checked."
    },
    "dir": {
      "type": "Direction",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox will be disabled"
    },
    "focusable": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true` and `disabled` is passed, the checkbox will\nremain tabbable but not interactive"
    },
    "form": {
      "type": "string",
      "isRequired": false,
      "description": "The associate form of the underlying checkbox."
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{ root: string; input: string; control: string; label: string; }>",
      "isRequired": false,
      "description": "The ids of the elements in the checkbox. Useful for composition."
    },
    "indeterminate": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox will be indeterminate.\nThis only affects the icon shown inside checkbox\nand does not modify the isChecked property."
    },
    "invalid": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox is marked as invalid."
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The name of the input field in a checkbox\n(Useful for form submission)."
    },
    "onChange": {
      "type": "(details: { checked: boolean | \"indeterminate\"; }) => void",
      "isRequired": false,
      "description": "The callback invoked when the checked state of the `Checkbox` changes."
    },
    "readOnly": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox will be readonly"
    },
    "required": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox input is marked as required,"
    },
    "value": {
      "type": "string | number",
      "isRequired": false,
      "description": "The value to be used in the checkbox input.\nThis is the value that will be returned on form submission."
    }
  },
  "UseCheckboxProps": {
    "aria-describedby": { "type": "string", "isRequired": false },
    "aria-label": {
      "type": "string",
      "isRequired": false,
      "description": "Defines the string that labels the checkbox element."
    },
    "aria-labelledby": { "type": "string", "isRequired": false },
    "checked": { "type": "boolean", "isRequired": false },
    "defaultChecked": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox will be initially checked."
    },
    "dir": {
      "type": "Direction",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox will be disabled"
    },
    "focusable": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true` and `disabled` is passed, the checkbox will\nremain tabbable but not interactive"
    },
    "form": {
      "type": "string",
      "isRequired": false,
      "description": "The associate form of the underlying checkbox."
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{ root: string; input: string; control: string; label: string; }>",
      "isRequired": false,
      "description": "The ids of the elements in the checkbox. Useful for composition."
    },
    "indeterminate": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox will be indeterminate.\nThis only affects the icon shown inside checkbox\nand does not modify the isChecked property."
    },
    "invalid": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox is marked as invalid."
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The name of the input field in a checkbox\n(Useful for form submission)."
    },
    "onChange": {
      "type": "(details: { checked: boolean | \"indeterminate\"; }) => void",
      "isRequired": false,
      "description": "The callback invoked when the checked state of the `Checkbox` changes."
    },
    "readOnly": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox will be readonly"
    },
    "required": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the checkbox input is marked as required,"
    },
    "value": {
      "type": "string | number",
      "isRequired": false,
      "description": "The value to be used in the checkbox input.\nThis is the value that will be returned on form submission."
    }
  },
  "UseCheckboxReturn": {
    "controlProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "inputProps": {
      "type": "DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>",
      "isRequired": true
    },
    "isChecked": { "type": "boolean", "isRequired": true },
    "isFocused": { "type": "boolean", "isRequired": true },
    "labelProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "rootProps": {
      "type": "DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>",
      "isRequired": true
    },
    "setChecked": { "type": "(checked: boolean) => void", "isRequired": true },
    "setIndeterminate": { "type": "(indeterminate: boolean) => void", "isRequired": true },
    "view": { "type": "string", "isRequired": true },
    "isDisabled": { "type": "boolean", "isRequired": false },
    "isIndeterminate": { "type": "boolean", "isRequired": false },
    "isReadOnly": { "type": "boolean", "isRequired": false }
  }
}
