{
  "Basic": "const Basic = () => {\n  const [options, setOptions] = useState(comboboxData)\n\n  const handleInputChange: ComboboxProps['onInputChange'] = ({ value }) => {\n    const filtered = comboboxData.filter((item) =>\n      item.label.toLowerCase().includes(value.toLowerCase()),\n    )\n    setOptions(filtered.length > 0 ? filtered : comboboxData)\n  }\n\n  return (\n    <Combobox onInputChange={handleInputChange}>\n      {({ isInputValueEmpty, isOpen }) => (\n        <>\n          <ComboboxLabel>JS Frameworks</ComboboxLabel>\n          <ComboboxControl>\n            <ComboboxInput />\n            <ComboboxTrigger>\n              <button>â–¼</button>\n            </ComboboxTrigger>\n          </ComboboxControl>\n          {isInputValueEmpty && !isOpen && <div>Give me you favorite framework!</div>}\n          <Portal>\n            <ComboboxPositioner>\n              <ComboboxContent>\n                {options.map((item, index) => (\n                  <ComboboxOption\n                    key={`${item.value}:${index}`}\n                    label={item.label}\n                    value={item.value}\n                    disabled={item?.disabled}\n                  >\n                    {item.label}\n                  </ComboboxOption>\n                ))}\n              </ComboboxContent>\n            </ComboboxPositioner>\n          </Portal>\n        </>\n      )}\n    </Combobox>\n  )\n}"
}
