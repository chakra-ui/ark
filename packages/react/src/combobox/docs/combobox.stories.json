{
  "Basic": "const Basic = () => {\n  // const [options, setItems] = useState(comboboxData)\n\n  // const handleInputChange: ComboboxProps['onInputChange'] = ({ value }) => {\n  //   const filtered = comboboxData.filter((item) =>\n  //     item.label.toLowerCase().includes(value.toLowerCase()),\n  //   )\n  //   setItems(filtered.length > 0 ? filtered : comboboxData)\n  // }\n\n  const frameworks = collection({\n    items: [{ value: 'React' }, { value: 'Solid' }, { value: 'Vue' }],\n  })\n\n  return (\n    <Combobox collection={frameworks}>\n      {({ isInputValueEmpty, isOpen }) => (\n        <>\n          <ComboboxLabel>JS Frameworks</ComboboxLabel>\n          <ComboboxControl>\n            <ComboboxInput />\n            <ComboboxTrigger>â–¼</ComboboxTrigger>\n            <ComboboxClearTrigger>Clear</ComboboxClearTrigger>\n          </ComboboxControl>\n          {isInputValueEmpty && !isOpen && <div>Give me you favorite framework!</div>}\n          <Portal>\n            <ComboboxPositioner>\n              <ComboboxContent>\n                <ComboboxItemGroup id=\"framework\">\n                  <ComboboxItemGroupLabel htmlFor=\"framework\">Frameworks</ComboboxItemGroupLabel>\n                  {frameworks.toArray().map((item) => (\n                    <ComboboxItem key={item.value} item={item}>\n                      <ComboboxItemIndicator item={item} />\n                      {item.value}\n                    </ComboboxItem>\n                  ))}\n                </ComboboxItemGroup>\n              </ComboboxContent>\n            </ComboboxPositioner>\n          </Portal>\n        </>\n      )}\n    </Combobox>\n  )\n}"
}
