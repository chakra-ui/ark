{
  "Basic": "const Basic = () => (\n  <SegmentGroup>\n    <SegmentIndicator />\n    {options.map((option, id) => (\n      <Segment key={id} value={option.id}>\n        <SegmentLabel>{option.label}</SegmentLabel>\n        <SegmentControl />\n      </Segment>\n    ))}\n  </SegmentGroup>\n)",
  "InitialValue": "const InitialValue = () => (\n  <SegmentGroup defaultValue=\"react\">\n    <SegmentIndicator />\n    {options.map((option, id) => (\n      <Segment key={id} value={option.id}>\n        <SegmentLabel>{option.label}</SegmentLabel>\n        <SegmentControl />\n      </Segment>\n    ))}\n  </SegmentGroup>\n)",
  "Controlled": "const Controlled = () => {\n  const [value, setValue] = useState('react')\n  return (\n    <SegmentGroup value={value} onChange={(e) => setValue(e.value)}>\n      <SegmentIndicator />\n      {options.map((option, id) => (\n        <Segment key={id} value={option.id}>\n          <SegmentLabel>{option.label}</SegmentLabel>\n          <SegmentControl />\n        </Segment>\n      ))}\n    </SegmentGroup>\n  )\n}",
  "Disabled": "const Disabled = () => (\n  <SegmentGroup defaultValue=\"react\">\n    <SegmentIndicator />\n    {options.map((option, id) => (\n      <Segment key={id} value={option.id} disabled={option.id === 'svelte'}>\n        <SegmentLabel>{option.label}</SegmentLabel>\n        <SegmentControl />\n      </Segment>\n    ))}\n  </SegmentGroup>\n)"
}
