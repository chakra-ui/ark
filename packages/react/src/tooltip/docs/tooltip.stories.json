{
  "Basic": "const Basic = () => (\n  <Tooltip openDelay={0} closeDelay={0}>\n    <TooltipTrigger>\n      <span>hover me</span>\n    </TooltipTrigger>\n    <Portal>\n      <TooltipPositioner>\n        <TooltipArrow>\n          <TooltipArrowTip />\n        </TooltipArrow>\n        <TooltipContent>My Tooltip</TooltipContent>\n      </TooltipPositioner>\n    </Portal>\n  </Tooltip>\n)",
  "Controlled": "const Controlled = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  return (\n    <>\n      <button onClick={() => setIsOpen(!isOpen)}>Toggle</button>\n      <Tooltip open={isOpen} openDelay={0} closeDelay={0}>\n        <TooltipTrigger>\n          <span>hover me</span>\n        </TooltipTrigger>\n        <Portal>\n          <TooltipPositioner>\n            <TooltipArrow>\n              <TooltipArrowTip />\n            </TooltipArrow>\n            <TooltipContent>My Tooltip</TooltipContent>\n          </TooltipPositioner>\n        </Portal>\n      </Tooltip>\n    </>\n  )\n}",
  "WithRenderFn": "const WithRenderFn = () => (\n  <Tooltip openDelay={0} closeDelay={0}>\n    {({ isOpen }) => (\n      <>\n        <TooltipTrigger>\n          <span>hover me</span>\n        </TooltipTrigger>\n        <Portal>\n          <TooltipPositioner>\n            <TooltipArrow>\n              <TooltipArrowTip />\n            </TooltipArrow>\n            <TooltipContent>IsOpen: {isOpen.toString()}</TooltipContent>\n          </TooltipPositioner>\n        </Portal>\n      </>\n    )}\n  </Tooltip>\n)"
}
