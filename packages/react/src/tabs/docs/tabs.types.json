{
  "TabContentProps": { "value": { "type": "string", "isRequired": true } },
  "TabTriggerProps": {
    "value": { "type": "string", "isRequired": true },
    "disabled": { "type": "boolean", "isRequired": false }
  },
  "TabsProps": {
    "activationMode": {
      "type": "'manual' | 'automatic'",
      "isRequired": false,
      "description": "The activation mode of the tabs. Can be `manual` or `automatic`\n- `manual`: Tabs are activated when clicked or press `enter` key.\n- `automatic`: Tabs are activated when receiving focus"
    },
    "defaultValue": { "type": "string", "isRequired": false },
    "dir": {
      "type": "Direction",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{\n  root: string\n  trigger: string\n  tablist: string\n  contentGroup: string\n  content: string\n}>",
      "isRequired": false,
      "description": "The ids of the elements in the tabs. Useful for composition."
    },
    "isIndicatorRendered": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the indicator is rendered."
    },
    "loop": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the keyboard navigation will loop from last tab to first, and vice versa."
    },
    "onChange": {
      "type": "(details: { value: string | null }) => void",
      "isRequired": false,
      "description": "Callback to be called when the selected/active tab changes"
    },
    "onDelete": {
      "type": "(details: { value: string }) => void",
      "isRequired": false,
      "description": "Callback to be called when a tab's close button is clicked"
    },
    "onFocus": {
      "type": "(details: { value: string | null }) => void",
      "isRequired": false,
      "description": "Callback to be called when the focused tab changes"
    },
    "orientation": {
      "type": "'horizontal' | 'vertical'",
      "isRequired": false,
      "description": "The orientation of the tabs. Can be `horizontal` or `vertical`\n- `horizontal`: only left and right arrow key navigation will work.\n- `vertical`: only up and down arrow key navigation will work."
    },
    "translations": {
      "type": "IntlTranslations",
      "isRequired": false,
      "description": "Specifies the localized strings that identifies the accessibility elements and their states"
    },
    "value": { "type": "string", "isRequired": false, "description": "The selected tab id" }
  },
  "UseTabsProps": {
    "activationMode": {
      "type": "'manual' | 'automatic'",
      "isRequired": false,
      "description": "The activation mode of the tabs. Can be `manual` or `automatic`\n- `manual`: Tabs are activated when clicked or press `enter` key.\n- `automatic`: Tabs are activated when receiving focus"
    },
    "defaultValue": { "type": "string", "isRequired": false },
    "dir": {
      "type": "Direction",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{\n  root: string\n  trigger: string\n  tablist: string\n  contentGroup: string\n  content: string\n}>",
      "isRequired": false,
      "description": "The ids of the elements in the tabs. Useful for composition."
    },
    "isIndicatorRendered": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the indicator is rendered."
    },
    "loop": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the keyboard navigation will loop from last tab to first, and vice versa."
    },
    "onChange": {
      "type": "(details: { value: string | null }) => void",
      "isRequired": false,
      "description": "Callback to be called when the selected/active tab changes"
    },
    "onDelete": {
      "type": "(details: { value: string }) => void",
      "isRequired": false,
      "description": "Callback to be called when a tab's close button is clicked"
    },
    "onFocus": {
      "type": "(details: { value: string | null }) => void",
      "isRequired": false,
      "description": "Callback to be called when the focused tab changes"
    },
    "orientation": {
      "type": "'horizontal' | 'vertical'",
      "isRequired": false,
      "description": "The orientation of the tabs. Can be `horizontal` or `vertical`\n- `horizontal`: only left and right arrow key navigation will work.\n- `vertical`: only up and down arrow key navigation will work."
    },
    "translations": {
      "type": "IntlTranslations",
      "isRequired": false,
      "description": "Specifies the localized strings that identifies the accessibility elements and their states"
    },
    "value": { "type": "string", "isRequired": false, "description": "The selected tab id" }
  },
  "UseTabsReturn": {
    "clearValue": { "type": "() => void", "isRequired": true },
    "contentGroupProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "getContentProps": {
      "type": "({ value }: { value: string }) => HTMLAttributes<HTMLElement>",
      "isRequired": true
    },
    "getTriggerProps": {
      "type": "(\n  props: TabProps,\n) => DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>",
      "isRequired": true
    },
    "indicatorProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "previousValues": { "type": "string[]", "isRequired": true },
    "rootProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "setValue": { "type": "(value: string) => void", "isRequired": true },
    "tablistProps": { "type": "HTMLAttributes<HTMLElement>", "isRequired": true },
    "focusedValue": { "type": "string", "isRequired": false },
    "value": { "type": "string", "isRequired": false }
  }
}
