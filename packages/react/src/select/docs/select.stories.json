{
  "Basic": "const Basic = () => {\n  const items = ['React', 'Solid', 'Vue']\n  return (\n    <Select items={items}>\n      <SelectLabel>Framework</SelectLabel>\n      <SelectControl>\n        <SelectTrigger>\n          <SelectValue placeholder=\"Select a Framework\" />\n        </SelectTrigger>\n        <SelectClearTrigger>Clear</SelectClearTrigger>\n      </SelectControl>\n      <Portal>\n        <SelectPositioner>\n          <SelectContent>\n            <SelectItemGroup id=\"framework\">\n              <SelectItemGroupLabel htmlFor=\"framework\">Frameworks</SelectItemGroupLabel>\n              {items.map((item) => (\n                <SelectItem key={item} item={item}>\n                  <SelectItemText>{item}</SelectItemText>\n                  <SelectItemIndicator>✓</SelectItemIndicator>\n                </SelectItem>\n              ))}\n            </SelectItemGroup>\n          </SelectContent>\n        </SelectPositioner>\n      </Portal>\n    </Select>\n  )\n}",
  "Advanced": "const Advanced = () => {\n  const items = [\n    { label: 'React', value: 'react' },\n    { label: 'Solid', value: 'solid' },\n    { label: 'Vue', value: 'vue' },\n    { label: 'Svelte', value: 'svelte', disabled: true },\n  ]\n  return (\n    <Select items={items} onChange={(e) => console.log(e.items)}>\n      <SelectLabel>Framework</SelectLabel>\n      <SelectControl>\n        <SelectTrigger>\n          <SelectValue placeholder=\"Select a Framework\" />\n        </SelectTrigger>\n        <SelectClearTrigger>Clear</SelectClearTrigger>\n      </SelectControl>\n      <Portal>\n        <SelectPositioner>\n          <SelectContent>\n            <SelectItemGroup id=\"framework\">\n              <SelectItemGroupLabel htmlFor=\"framework\">Frameworks</SelectItemGroupLabel>\n              {items.map((item) => (\n                <SelectItem key={item.value} item={item}>\n                  <SelectItemText>{item.label}</SelectItemText>\n                  <SelectItemIndicator>✓</SelectItemIndicator>\n                </SelectItem>\n              ))}\n            </SelectItemGroup>\n          </SelectContent>\n        </SelectPositioner>\n      </Portal>\n    </Select>\n  )\n}",
  "Controlled": "const Controlled = () => {\n  const [selectedItems, setSelectedItems] = useState<Item[]>([])\n\n  const items = [\n    { label: 'React', value: 'react' },\n    { label: 'Solid', value: 'solid' },\n    { label: 'Vue', value: 'vue' },\n    { label: 'Svelte', value: 'svelte', disabled: true },\n  ]\n\n  return (\n    <>\n      <output>\n        <pre>{JSON.stringify(selectedItems, null, 2)}</pre>\n      </output>\n      <Select items={items} multiple onChange={(e) => setSelectedItems(e.items)}>\n        <SelectLabel>Framework</SelectLabel>\n        <SelectControl>\n          <SelectTrigger>\n            <SelectValue placeholder=\"Select a Framework\" />\n          </SelectTrigger>\n          <SelectClearTrigger>Clear</SelectClearTrigger>\n        </SelectControl>\n        <Portal>\n          <SelectPositioner>\n            <SelectContent>\n              <SelectItemGroup id=\"framework\">\n                <SelectItemGroupLabel htmlFor=\"framework\">Frameworks</SelectItemGroupLabel>\n                {items.map((item) => (\n                  <SelectItem key={item.value} item={item}>\n                    <SelectItemText>{item.label}</SelectItemText>\n                    <SelectItemIndicator>✓</SelectItemIndicator>\n                  </SelectItem>\n                ))}\n              </SelectItemGroup>\n            </SelectContent>\n          </SelectPositioner>\n        </Portal>\n      </Select>\n    </>\n  )\n}",
  "Multiple": "const Multiple = () => {\n  const items = [\n    { label: 'React', value: 'react' },\n    { label: 'Solid', value: 'solid' },\n    { label: 'Vue', value: 'vue' },\n    { label: 'Svelte', value: 'svelte', disabled: true },\n  ]\n  return (\n    <Select items={items} multiple>\n      <SelectLabel>Framework</SelectLabel>\n      <SelectControl>\n        <SelectTrigger>\n          <SelectValue placeholder=\"Select a Framework\" />\n        </SelectTrigger>\n        <SelectClearTrigger>Clear</SelectClearTrigger>\n      </SelectControl>\n      <Portal>\n        <SelectPositioner>\n          <SelectContent>\n            <SelectItemGroup id=\"framework\">\n              <SelectItemGroupLabel htmlFor=\"framework\">Frameworks</SelectItemGroupLabel>\n              {items.map((item) => (\n                <SelectItem key={item.value} item={item}>\n                  <SelectItemText>{item.label}</SelectItemText>\n                  <SelectItemIndicator>✓</SelectItemIndicator>\n                </SelectItem>\n              ))}\n            </SelectItemGroup>\n          </SelectContent>\n        </SelectPositioner>\n      </Portal>\n    </Select>\n  )\n}"
}
