---
import '@fontsource-variable/fira-code'
import '@fontsource-variable/inter'
import { ViewTransitions } from 'astro:transitions'
import './index.css'

interface Props {
  title: string
  description?: string
}

const { title, description } = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{title} | Ark UI</title>
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="keywords" content="Headless,Components,Library,React,Solid,Vue" />
    <link rel="manifest" href="/app.webmanifest" />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Icons -->
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" sizes="any" />
    <link rel="icon" href="/favicon.ico" type="image/x-icon" sizes="32x32" />
    <link rel="apple-touch-icon" href="/apple-icon.png" type="image/png" sizes="180x180" />

    <!-- OpenGraph -->
    <meta property="og:url" content="https://ark-ui.com/" />
    <meta property="og:locale" content="en_US" />
    <meta property="og:type" content="website" />
    <meta
      property="og:description"
      content="A headless component library for building reusable, scalable design systems that works for a wide range of JS frameworks."
    />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:creator" content="@ark_ui_" />
    <meta
      name="twitter:description"
      content="A headless component library for building reusable, scalable design systems that works for a wide range of JS frameworks."
    />

    <!-- Tracking -->
    <script defer data-domain="ark-ui.com" src="https://plausible.io/js/script.js"></script>

    <ViewTransitions />
  </head>
  <body>
    <slot />
    <script is:inline>
      const setColorMode = () => {
        const colorMode = (() => {
          if (typeof localStorage !== 'undefined' && localStorage.getItem('ark-ui-color-mode')) {
            return localStorage.getItem('ark-ui-color-mode')
          }
          if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
            return 'dark'
          }
          return 'light'
        })()

        if (colorMode === 'dark') {
          document.documentElement.classList.add('dark')
        }

        window.localStorage.setItem('ark-ui-color-mode', colorMode)
      }
      setColorMode()
      document.addEventListener('astro:after-swap', setColorMode)
    </script>
  </body>
</html>
