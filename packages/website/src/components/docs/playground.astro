---
import { Box, Flex } from 'styled-system/jsx'
import { match } from 'ts-pattern'
import {
  Accordion,
  Avatar,
  Carousel,
  Checkbox,
  ColorPicker,
  Combobox,
  DatePicker,
  Dialog,
  Editable,
  HoverCard,
  Menu,
  NumberInput,
  Pagination,
  PinInput,
  Popover,
  RadioGroup,
  RatingGroup,
  SegmentGroup,
  Select,
  Slider,
  Splitter,
  Switch,
  Tabs,
  TagsInput,
  Toast,
  ToggleGroup,
  Tooltip,
} from '~/demos'
const { component } = Astro.props
---

<Flex
  bg="bg.default"
  minH="40"
  borderRadius="lg"
  borderWidth="1px"
  width="full"
  overflow="hidden"
  className="not-prose"
>
  <Flex justify="center" align="center" flex="1" p={{ base: '4', md: '6' }}>
    {
      match(component)
        .with('accordion', () => <Accordion client:load />)
        .with('avatar', () => <Avatar client:load />)
        .with('carousel', () => <Carousel client:load />)
        .with('checkbox', () => <Checkbox client:load />)
        .with('color-picker', () => <ColorPicker client:load />)
        .with('combobox', () => <Combobox client:load />)
        .with('date-picker', () => <DatePicker client:load />)
        .with('dialog', () => <Dialog client:load />)
        .with('editable', () => <Editable client:load />)
        .with('hover-card', () => <HoverCard client:load />)
        .with('menu', () => <Menu client:load />)
        .with('number-input', () => <NumberInput client:load />)
        .with('pagination', () => <Pagination client:load />)
        .with('pin-input', () => <PinInput client:load />)
        .with('popover', () => <Popover client:load />)
        .with('radio-group', () => <RadioGroup client:load />)
        .with('rating-group', () => <RatingGroup client:load />)
        .with('segment-group', () => <SegmentGroup client:load />)
        .with('select', () => <Select client:load />)
        .with('slider', () => <Slider client:load />)
        .with('splitter', () => <Splitter client:load />)
        .with('switch', () => <Switch client:load />)
        .with('tabs', () => <Tabs client:load />)
        .with('tags-input', () => <TagsInput client:load />)
        .with('toast', () => <Toast client:load />)
        .with('toggle-group', () => <ToggleGroup client:load />)
        .with('tooltip', () => <Tooltip client:load />)
        .otherwise(() => <Box>No preview available for {component}</Box>)
    }
  </Flex>
</Flex>
