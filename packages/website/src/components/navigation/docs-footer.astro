---
import type { CollectionEntry } from 'astro:content'
import { ArrowLeft, ArrowRight } from 'lucide-react'
import { HStack, Stack } from 'styled-system/jsx'
import { button } from 'styled-system/recipes'
import { Typography } from '../ui/typography'

type Props = {
  basePath: string
  currentPage: CollectionEntry<'components'> | CollectionEntry<'docs'>
  pages: CollectionEntry<'components'>[] | CollectionEntry<'docs'>[]
}

const { currentPage, pages, basePath } = Astro.props

const index = pages.findIndex((page) => page.id === currentPage.id)
const prevPage = pages[index - 1]
const nextPage = pages[index + 1]
---

<Stack width="full" gap="6" mt="12">
  <HStack justify="space-between" width="full">
    {
      prevPage && (
        <Stack gap="3">
          <Typography color="fg.subtle" fontWeight="semibold" textStyle="sm">
            Previous
          </Typography>
          <a href={basePath + prevPage.data.id} class={button({ variant: 'link', size: 'lg' })}>
            <ArrowLeft /> {prevPage.data.title}
          </a>
        </Stack>
      )
    }
    {
      nextPage && (
        <Stack gap="3" style={{ marginLeft: 'auto' }}>
          <Typography color="fg.subtle" fontWeight="semibold" textStyle="sm">
            Next
          </Typography>

          <a href={basePath + nextPage.data.id} class={button({ variant: 'link', size: 'lg' })}>
            {nextPage.data.title} <ArrowRight />
          </a>
        </Stack>
      )
    }
  </HStack>
</Stack>
