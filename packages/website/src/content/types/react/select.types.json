{
  "Item": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    },
    "item": { "type": "any", "isRequired": false }
  },
  "Root": {
    "items": {
      "type": "T[] | readonly T[]",
      "isRequired": true,
      "description": "The options of the select"
    },
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    },
    "closeOnSelect": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the select should close after an item is selected"
    },
    "defaultValue": {
      "type": "string[]",
      "isRequired": false,
      "description": "The initial value of the select."
    },
    "dir": {
      "type": "'ltr' | 'rtl'",
      "defaultValue": "\"ltr\"",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the select is disabled"
    },
    "form": {
      "type": "string",
      "isRequired": false,
      "description": "The associate form of the underlying select."
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "highlightedValue": {
      "type": "string",
      "isRequired": false,
      "description": "The key of the highlighted item"
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{\n  root: string\n  content: string\n  control: string\n  trigger: string\n  clearTrigger: string\n  label: string\n  hiddenSelect: string\n  positioner: string\n  item(id: string | number): string\n  itemGroup(id: string | number): string\n  itemGroupLabel(id: string | number): string\n}>",
      "isRequired": false,
      "description": "The ids of the elements in the select. Useful for composition."
    },
    "invalid": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the select is invalid"
    },
    "isItemDisabled": {
      "type": "(item: T) => boolean",
      "isRequired": false,
      "description": "Whether the item is disabled"
    },
    "itemToString": {
      "type": "(item: T) => string",
      "isRequired": false,
      "description": "The label of the item"
    },
    "itemToValue": {
      "type": "(item: T) => string",
      "isRequired": false,
      "description": "The value of the item"
    },
    "lazyMount": {
      "type": "boolean",
      "defaultValue": "false",
      "isRequired": false,
      "description": "Whether to enable lazy mounting"
    },
    "loop": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to loop the keyboard navigation through the options"
    },
    "multiple": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to allow multiple selection"
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The `name` attribute of the underlying select."
    },
    "onExitComplete": {
      "type": "() => void",
      "isRequired": false,
      "description": "Function called when the animation ends in the closed state."
    },
    "onFocusOutside": {
      "type": "(event: FocusOutsideEvent) => void",
      "isRequired": false,
      "description": "Function called when the focus is moved outside the component"
    },
    "onHighlightChange": {
      "type": "(details: HighlightChangeDetails<T>) => void",
      "isRequired": false,
      "description": "The callback fired when the highlighted item changes."
    },
    "onInteractOutside": {
      "type": "(event: InteractOutsideEvent) => void",
      "isRequired": false,
      "description": "Function called when an interaction happens outside the component"
    },
    "onOpenChange": {
      "type": "(details: OpenChangeDetails) => void",
      "isRequired": false,
      "description": "Function called when the popup is opened"
    },
    "onPointerDownOutside": {
      "type": "(event: PointerDownOutsideEvent) => void",
      "isRequired": false,
      "description": "Function called when the pointer is pressed down outside the component"
    },
    "onValueChange": {
      "type": "(details: ValueChangeDetails<T>) => void",
      "isRequired": false,
      "description": "The callback fired when the selected item changes."
    },
    "open": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the select menu is open"
    },
    "positioning": {
      "type": "PositioningOptions",
      "isRequired": false,
      "description": "The positioning options of the menu."
    },
    "present": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the node is present (controlled by the user)"
    },
    "readOnly": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the select is read-only"
    },
    "selectOnBlur": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to select the highlighted item when the user presses Tab,\nand the menu is open."
    },
    "unmountOnExit": {
      "type": "boolean",
      "defaultValue": "false",
      "isRequired": false,
      "description": "Whether to unmount on exit."
    },
    "value": {
      "type": "string[]",
      "isRequired": false,
      "description": "The keys of the selected items"
    }
  },
  "Label": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "Content": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "Control": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "Trigger": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "ItemText": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "Indicator": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "ItemGroup": {
    "id": { "type": "string", "isRequired": true },
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "ValueText": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    },
    "placeholder": {
      "type": "string",
      "isRequired": false,
      "description": "Text to display when no value is selected."
    }
  },
  "Positioner": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "ClearTrigger": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "ItemIndicator": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "ItemGroupLabel": {
    "htmlFor": { "type": "string", "isRequired": true },
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  }
}
