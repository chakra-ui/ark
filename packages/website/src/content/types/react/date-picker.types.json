{
  "DatePickerProps": {
    "dir": {
      "type": "'ltr' | 'rtl'",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the calendar is disabled."
    },
    "fixedWeeks": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the calendar should have a fixed number of weeks.\nThis renders the calendar with 6 weeks instead of 5 or 6."
    },
    "focusedValue": {
      "type": "DateValue",
      "isRequired": false,
      "description": "The focused date."
    },
    "format": {
      "type": "(date: DateValue[]) => string",
      "isRequired": false,
      "description": "The format of the date to display in the input."
    },
    "getRootNode": {
      "type": "() => ShadowRoot | Node | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{ grid(id: string): string; header: string; content: string; cellTrigger(id: string): string; prevTrigger(view: DateView): string; nextTrigger(view: DateView): string; ... 7 more ...; positioner: string; }>",
      "isRequired": false,
      "description": "The ids of the elements in the date picker. Useful for composition."
    },
    "inline": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the calendar should be displayed inline."
    },
    "isDateUnavailable": {
      "type": "(date: DateValue, locale: string) => boolean",
      "isRequired": false,
      "description": "Returns whether a date of the calendar is available."
    },
    "locale": {
      "type": "string",
      "isRequired": false,
      "description": "The locale (BCP 47 language tag) to use when formatting the date."
    },
    "max": {
      "type": "DateValue",
      "isRequired": false,
      "description": "The maximum date that can be selected."
    },
    "messages": {
      "type": "IntlMessages",
      "isRequired": false,
      "description": "The localized messages to use."
    },
    "min": {
      "type": "DateValue",
      "isRequired": false,
      "description": "The minimum date that can be selected."
    },
    "modal": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the calendar should be modal. This means that the calendar will\nblock interaction with the rest of the page, and trap focus within it."
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The `name` attribute of the input element."
    },
    "numOfMonths": {
      "type": "number",
      "isRequired": false,
      "description": "The number of months to display."
    },
    "onFocusChange": {
      "type": "(details: FocusChangeDetails) => void",
      "isRequired": false,
      "description": "Function called when the focused date changes."
    },
    "onOpenChange": {
      "type": "(details: OpenChangeDetails) => void",
      "isRequired": false,
      "description": "Function called when the calendar opens or closes."
    },
    "onValueChange": {
      "type": "(details: ValueChangeDetails) => void",
      "isRequired": false,
      "description": "Function called when the value changes."
    },
    "onViewChange": {
      "type": "(details: ViewChangeDetails) => void",
      "isRequired": false,
      "description": "Function called when the view changes."
    },
    "parse": {
      "type": "(value: string) => DateValue[]",
      "isRequired": false,
      "description": "The format of the date to display in the input."
    },
    "positioning": {
      "type": "PositioningOptions",
      "isRequired": false,
      "description": "The user provided options used to position the date picker content"
    },
    "readOnly": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the calendar is read-only."
    },
    "selectionMode": {
      "type": "SelectionMode",
      "isRequired": false,
      "description": "The selection mode of the calendar.\n- `single` - only one date can be selected\n- `multiple` - multiple dates can be selected\n- `range` - a range of dates can be selected"
    },
    "startOfWeek": {
      "type": "number",
      "isRequired": false,
      "description": "The first day of the week.\n `0` - Sunday\n `1` - Monday\n `2` - Tuesday\n `3` - Wednesday\n `4` - Thursday\n `5` - Friday\n `6` - Saturday"
    },
    "timeZone": { "type": "string", "isRequired": false, "description": "The time zone to use" },
    "value": { "type": "DateValue[]", "isRequired": false, "description": "The selected date(s)." },
    "view": { "type": "DateView", "isRequired": false, "description": "The view of the calendar" }
  },
  "DatePickerContext": {
    "clearTriggerProps": { "type": "Dict<any>", "isRequired": true },
    "clearValue": {
      "type": "() => void",
      "isRequired": true,
      "description": "Clears the selected date(s)."
    },
    "close": {
      "type": "() => void",
      "isRequired": true,
      "description": "Function to close the calendar."
    },
    "contentProps": { "type": "Dict<any>", "isRequired": true },
    "controlProps": { "type": "Dict<any>", "isRequired": true },
    "focusedValue": { "type": "DateValue", "isRequired": true, "description": "The focused date." },
    "focusedValueAsDate": {
      "type": "Date",
      "isRequired": true,
      "description": "The focused date as a Date object."
    },
    "focusedValueAsString": {
      "type": "string",
      "isRequired": true,
      "description": "The focused date as a string."
    },
    "focusMonth": {
      "type": "(month: number) => void",
      "isRequired": true,
      "description": "Function to set the selected month."
    },
    "focusYear": {
      "type": "(year: number) => void",
      "isRequired": true,
      "description": "Function to set the selected year."
    },
    "format": {
      "type": "(value: CalendarDate, opts?: DateTimeFormatOptions | undefined) => string",
      "isRequired": true,
      "description": "Formats the given date value based on the provided options."
    },
    "getDayCellProps": { "type": "(props: DayCellProps) => Dict<any>", "isRequired": true },
    "getDayCellState": {
      "type": "(props: DayCellProps) => DayCellState",
      "isRequired": true,
      "description": "Returns the state details for a given cell."
    },
    "getDayCellTriggerProps": { "type": "(props: DayCellProps) => Dict<any>", "isRequired": true },
    "getDaysInWeek": {
      "type": "(weekIndex: number, from?: DateValue | undefined) => DateValue[]",
      "isRequired": true,
      "description": "Returns an array of days in the week index counted from the provided start date, or the first visible date if not given."
    },
    "getDecade": {
      "type": "() => { start: number | undefined; end: number | undefined }",
      "isRequired": true,
      "description": "Returns the start and end years of the decade."
    },
    "getGridProps": { "type": "(props?: GridProps | undefined) => Dict<any>", "isRequired": true },
    "getHeaderProps": {
      "type": "(props?: ViewProps | undefined) => Dict<any>",
      "isRequired": true
    },
    "getMonthCellProps": { "type": "(props: CellProps) => Dict<any>", "isRequired": true },
    "getMonthCellState": {
      "type": "(props: CellProps) => CellState",
      "isRequired": true,
      "description": "Returns the state details for a given month cell."
    },
    "getMonthCellTriggerProps": { "type": "(props: CellProps) => Dict<any>", "isRequired": true },
    "getMonthDays": {
      "type": "(from?: DateValue | undefined) => DateValue[][]",
      "isRequired": true,
      "description": "Returns the weeks of the month from the provided date. Represented as an array of arrays of dates."
    },
    "getMonths": {
      "type": "(props?: { format?: 'short' | 'long' | undefined } | undefined) => GridItem[]",
      "isRequired": true,
      "description": "Returns the months of the year"
    },
    "getMonthsGrid": {
      "type": "(props?: MonthGridProps | undefined) => MonthGridValue",
      "isRequired": true,
      "description": "Returns the months of the year based on the columns.\nRepresented as an array of arrays of months."
    },
    "getNextTriggerProps": {
      "type": "(props?: ViewProps | undefined) => Dict<any>",
      "isRequired": true
    },
    "getOffset": {
      "type": "(months: number) => {\n  amount: number\n  visibleRange: {\n    start: CalendarDate | CalendarDateTime | ZonedDateTime\n    end: CalendarDate | CalendarDateTime | ZonedDateTime\n  }\n  weeks: DateValue[][]\n}",
      "isRequired": true,
      "description": "Returns the offset of the month based on the provided number of months."
    },
    "getPrevTriggerProps": {
      "type": "(props?: ViewProps | undefined) => Dict<any>",
      "isRequired": true
    },
    "getViewTriggerProps": {
      "type": "(props?: ViewProps | undefined) => Dict<any>",
      "isRequired": true
    },
    "getYearCellProps": { "type": "(props: CellProps) => Dict<any>", "isRequired": true },
    "getYearCellState": { "type": "(props: CellProps) => CellState", "isRequired": true },
    "getYearCellTriggerProps": { "type": "(props: CellProps) => Dict<any>", "isRequired": true },
    "getYears": {
      "type": "() => GridItem[]",
      "isRequired": true,
      "description": "Returns the months of the year"
    },
    "getYearsGrid": {
      "type": "(props?: YearGridProps | undefined) => YearGridValue",
      "isRequired": true,
      "description": "Returns the years of the decade based on the columns.\nRepresented as an array of arrays of years."
    },
    "goToNext": {
      "type": "() => void",
      "isRequired": true,
      "description": "Goes to the next month/year/decade."
    },
    "goToPrev": {
      "type": "() => void",
      "isRequired": true,
      "description": "Goes to the previous month/year/decade."
    },
    "inputProps": { "type": "Dict<any>", "isRequired": true },
    "isFocused": {
      "type": "boolean",
      "isRequired": true,
      "description": "Whether the input is focused"
    },
    "isUnavailable": {
      "type": "(date: DateValue) => boolean",
      "isRequired": true,
      "description": "Returns whether the provided date is available (or can be selected)"
    },
    "monthSelectProps": { "type": "Dict<any>", "isRequired": true },
    "open": {
      "type": "() => void",
      "isRequired": true,
      "description": "Function to open the calendar."
    },
    "positionerProps": { "type": "Dict<any>", "isRequired": true },
    "selectToday": {
      "type": "() => void",
      "isRequired": true,
      "description": "Sets the selected date to today."
    },
    "setFocusedValue": {
      "type": "(value: CalendarDate) => void",
      "isRequired": true,
      "description": "Sets the focused date to the given date."
    },
    "setValue": {
      "type": "(values: CalendarDate[]) => void",
      "isRequired": true,
      "description": "Sets the selected date to the given date."
    },
    "setView": {
      "type": "(view: DateView) => void",
      "isRequired": true,
      "description": "Sets the view of the date picker."
    },
    "triggerProps": { "type": "Dict<any>", "isRequired": true },
    "value": { "type": "DateValue[]", "isRequired": true, "description": "The selected date." },
    "valueAsDate": {
      "type": "Date[]",
      "isRequired": true,
      "description": "The selected date as a Date object."
    },
    "valueAsString": {
      "type": "string[]",
      "isRequired": true,
      "description": "The selected date as a string."
    },
    "view": {
      "type": "DateView",
      "isRequired": true,
      "description": "The current view of the date picker"
    },
    "visibleRange": {
      "type": "{ start: DateValue; end: DateValue }",
      "isRequired": true,
      "description": "The visible range of dates."
    },
    "visibleRangeText": {
      "type": "{ start: string; end: string; formatted: string }",
      "isRequired": true,
      "description": "The human readable text for the visible range of dates."
    },
    "weekDays": {
      "type": "{\n  value: CalendarDate | CalendarDateTime | ZonedDateTime\n  short: string\n  long: string\n  narrow: string\n}[]",
      "isRequired": true,
      "description": "The days of the week. Represented as an array of strings."
    },
    "weeks": {
      "type": "DateValue[][]",
      "isRequired": true,
      "description": "The weeks of the month. Represented as an array of arrays of dates."
    },
    "yearSelectProps": { "type": "Dict<any>", "isRequired": true },
    "isOpen": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the date picker is open"
    }
  },
  "DatePickerGridProps": {
    "columns": { "type": "number", "isRequired": false },
    "id": { "type": "string", "isRequired": false },
    "view": { "type": "DateView", "isRequired": false }
  },
  "DatePickerCellContext": {
    "value": { "type": "number", "isRequired": true },
    "disabled": { "type": "boolean", "isRequired": false }
  },
  "DatePickerDayCellProps": {
    "value": { "type": "DateValue", "isRequired": true },
    "disabled": { "type": "boolean", "isRequired": false },
    "offset": { "type": "Offset", "isRequired": false }
  },
  "DatePickerYearCellProps": {
    "value": { "type": "number", "isRequired": true },
    "disabled": { "type": "boolean", "isRequired": false }
  },
  "DatePickerDayCellContext": {
    "value": { "type": "DateValue", "isRequired": true },
    "disabled": { "type": "boolean", "isRequired": false },
    "offset": { "type": "Offset", "isRequired": false }
  },
  "DatePickerMonthCellProps": {
    "value": { "type": "number", "isRequired": true },
    "disabled": { "type": "boolean", "isRequired": false }
  },
  "DatePickerPrevTriggerProps": { "view": { "type": "DateView", "isRequired": false } },
  "DatePickerViewTriggerProps": { "view": { "type": "DateView", "isRequired": false } }
}
