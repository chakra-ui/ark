{
  "Root": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    },
    "autoFocus": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to auto-focus the first input."
    },
    "blurOnComplete": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to blur the input when the value is complete"
    },
    "defaultValue": {
      "type": "string[]",
      "isRequired": false,
      "description": "The initial value of the pin input."
    },
    "dir": {
      "type": "'ltr' | 'rtl'",
      "defaultValue": "\"ltr\"",
      "isRequired": false,
      "description": "The document's text/writing direction."
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the inputs are disabled"
    },
    "form": {
      "type": "string",
      "isRequired": false,
      "description": "The associate form of the underlying input element."
    },
    "getRootNode": {
      "type": "() => Node | ShadowRoot | Document",
      "isRequired": false,
      "description": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron."
    },
    "id": {
      "type": "string",
      "isRequired": false,
      "description": "The unique identifier of the machine."
    },
    "ids": {
      "type": "Partial<{\n  root: string\n  hiddenInput: string\n  label: string\n  control: string\n  input(id: string): string\n}>",
      "isRequired": false,
      "description": "The ids of the elements in the pin input. Useful for composition."
    },
    "invalid": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the pin input is in the invalid state"
    },
    "mask": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the input's value will be masked just like `type=password`"
    },
    "name": {
      "type": "string",
      "isRequired": false,
      "description": "The name of the input element. Useful for form submission."
    },
    "onValueChange": {
      "type": "(details: ValueChangeDetails) => void",
      "isRequired": false,
      "description": "Function called on input change"
    },
    "onValueComplete": {
      "type": "(details: ValueChangeDetails) => void",
      "isRequired": false,
      "description": "Function called when all inputs have valid values"
    },
    "onValueInvalid": {
      "type": "(details: ValueInvalidDetails) => void",
      "isRequired": false,
      "description": "Function called when an invalid value is entered"
    },
    "otp": {
      "type": "boolean",
      "isRequired": false,
      "description": "If `true`, the pin input component signals to its fields that they should\nuse `autocomplete=\"one-time-code\"`."
    },
    "pattern": {
      "type": "string",
      "isRequired": false,
      "description": "The regular expression that the user-entered input value is checked against."
    },
    "placeholder": {
      "type": "string",
      "isRequired": false,
      "description": "The placeholder text for the input"
    },
    "selectOnFocus": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether to select input value when input is focused"
    },
    "translations": {
      "type": "IntlTranslations",
      "isRequired": false,
      "description": "Specifies the localized strings that identifies the accessibility elements and their states"
    },
    "type": {
      "type": "'alphabetic' | 'numeric' | 'alphanumeric'",
      "isRequired": false,
      "description": "The type of value the pin-input should allow"
    },
    "value": {
      "type": "string[]",
      "isRequired": false,
      "description": "The value of the the pin input."
    }
  },
  "Input": {
    "index": { "type": "number", "isRequired": true },
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "Label": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  },
  "Control": {
    "asChild": {
      "type": "boolean",
      "isRequired": false,
      "description": "Render as a different element type."
    }
  }
}
