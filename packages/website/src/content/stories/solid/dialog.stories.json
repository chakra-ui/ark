{
  "Basic": "import { Dialog } from '@ark-ui/solid'\nimport { Portal } from 'solid-js/web'\n\nconst Basic = () => {\n  return (\n    <Dialog.Root>\n      <Dialog.Trigger>Open Dialog</Dialog.Trigger>\n      <Portal>\n        <Dialog.Backdrop />\n        <Dialog.Positioner>\n          <Dialog.Content>\n            <Dialog.Title>Dialog Title</Dialog.Title>\n            <Dialog.Description>Dialog Description</Dialog.Description>\n            <Dialog.CloseTrigger>Close</Dialog.CloseTrigger>\n          </Dialog.Content>\n        </Dialog.Positioner>\n      </Portal>\n    </Dialog.Root>\n  )\n}\n",
  "Controlled": "import { Dialog } from '@ark-ui/solid'\nimport { createSignal } from 'solid-js'\nimport { Portal } from 'solid-js/web'\n\nconst Controlled = () => {\n  const [isOpen, setIsOpen] = createSignal(false)\n\n  return (\n    <>\n      <button onClick={() => setIsOpen(true)}>Open Dialog</button>\n      <Dialog.Root open={isOpen()} onOpenChange={() => setIsOpen(false)}>\n        <Portal>\n          <Dialog.Backdrop />\n          <Dialog.Positioner>\n            <Dialog.Content>\n              <Dialog.Title>Dialog Title</Dialog.Title>\n              <Dialog.Description>Dialog Description</Dialog.Description>\n              <Dialog.CloseTrigger>Close</Dialog.CloseTrigger>\n            </Dialog.Content>\n          </Dialog.Positioner>\n        </Portal>\n      </Dialog.Root>\n    </>\n  )\n}\n",
  "LazyMount": "import { Dialog } from '@ark-ui/solid'\n\nconst LazyMount = () => {\n  return (\n    <Dialog.Root lazyMount unmountOnExit>\n      <Dialog.Trigger>Open Dialog</Dialog.Trigger>\n      <Dialog.Backdrop />\n      <Dialog.Positioner>\n        <Dialog.Content>\n          <Dialog.Title>Dialog Title</Dialog.Title>\n          <Dialog.Description>Dialog Description</Dialog.Description>\n          <Dialog.CloseTrigger>Close</Dialog.CloseTrigger>\n        </Dialog.Content>\n      </Dialog.Positioner>\n    </Dialog.Root>\n  )\n}\n",
  "RenderFn": "import { Dialog } from '@ark-ui/solid'\nimport { Portal } from 'solid-js/web'\n\nconst RenderFn = () => {\n  return (\n    <Dialog.Root>\n      {(api) => (\n        <>\n          <Dialog.Trigger>Open Dialog</Dialog.Trigger>\n          <Portal>\n            <Dialog.Backdrop />\n            <Dialog.Positioner>\n              <Dialog.Content>\n                <Dialog.Title>Dialog Title</Dialog.Title>\n                <Dialog.Description>Dialog Description</Dialog.Description>\n                <Dialog.CloseTrigger>Close</Dialog.CloseTrigger>\n              </Dialog.Content>\n            </Dialog.Positioner>\n          </Portal>\n          <p>Dialog is {api().isOpen ? 'open' : 'closed'}</p>\n        </>\n      )}\n    </Dialog.Root>\n  )\n}\n"
}
