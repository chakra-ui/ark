{
  "Basic": "import { Pagination } from '@ark-ui/solid'\nimport { For } from 'solid-js'\n\nconst Basic = () => (\n  <Pagination.Root count={5000} pageSize={10} siblingCount={2}>\n    {(api) => (\n      <>\n        <Pagination.PrevTrigger>Previous Page</Pagination.PrevTrigger>\n        <For each={api().pages}>\n          {(page, index) =>\n            page.type === 'page' ? (\n              <Pagination.Item {...page}>{page.value}</Pagination.Item>\n            ) : (\n              <Pagination.Ellipsis index={index()}>&#8230;</Pagination.Ellipsis>\n            )\n          }\n        </For>\n        <Pagination.NextTrigger>Next Page</Pagination.NextTrigger>\n      </>\n    )}\n  </Pagination.Root>\n)\n",
  "Controlled": "import { Pagination } from '@ark-ui/solid'\nimport { For, createSignal } from 'solid-js'\n\nconst Controlled = () => {\n  const [currentPage, setCurrentPage] = createSignal(1)\n\n  return (\n    <Pagination.Root\n      count={5000}\n      pageSize={10}\n      siblingCount={2}\n      page={currentPage()}\n      onPageChange={(details) => setCurrentPage(details.page)}\n    >\n      {(api) => (\n        <>\n          <Pagination.PrevTrigger>Previous Page</Pagination.PrevTrigger>\n          <For each={api().pages}>\n            {(page, index) =>\n              page.type === 'page' ? (\n                <Pagination.Item {...page}>{page.value}</Pagination.Item>\n              ) : (\n                <Pagination.Ellipsis index={index()}>&#8230;</Pagination.Ellipsis>\n              )\n            }\n          </For>\n          <Pagination.NextTrigger>Next Page</Pagination.NextTrigger>\n        </>\n      )}\n    </Pagination.Root>\n  )\n}\n",
  "Customized": "import { Pagination } from '@ark-ui/solid'\nimport { For } from 'solid-js'\n\nconst Customized = () => {\n  return (\n    <Pagination.Root\n      count={5000}\n      pageSize={20}\n      siblingCount={3}\n      dir=\"ltr\"\n      translations={{\n        nextTriggerLabel: 'Next',\n        prevTriggerLabel: 'Prev',\n        itemLabel: (details) => `Page ${details.page}`,\n      }}\n    >\n      {(api) => (\n        <>\n          <Pagination.PrevTrigger>Previous Page</Pagination.PrevTrigger>\n          <For each={api().pages}>\n            {(page, index) =>\n              page.type === 'page' ? (\n                <Pagination.Item {...page}>{page.value}</Pagination.Item>\n              ) : (\n                <Pagination.Ellipsis index={index()}>&#8230;</Pagination.Ellipsis>\n              )\n            }\n          </For>\n          <Pagination.NextTrigger>Next Page</Pagination.NextTrigger>\n        </>\n      )}\n    </Pagination.Root>\n  )\n}\n"
}
