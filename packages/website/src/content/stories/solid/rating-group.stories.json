{
  "Basic": "import { RatingGroup } from '@ark-ui/solid'\nimport { Index } from 'solid-js'\n\nconst Basic = () => (\n  <RatingGroup.Root count={5} value={3}>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {(api) => (\n        <Index each={api().items}>\n          {(index) => (\n            <RatingGroup.Item index={index()}>\n              {(api) => (api().isHighlighted ? <IconFull /> : <IconEmpty />)}\n            </RatingGroup.Item>\n          )}\n        </Index>\n      )}\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "HalfRatings": "import { RatingGroup } from '@ark-ui/solid'\nimport { Index } from 'solid-js'\n\nconst HalfRatings = () => (\n  <RatingGroup.Root count={5} value={3} allowHalf>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {(api) => (\n        <Index each={api().items}>\n          {(index) => (\n            <RatingGroup.Item index={index()}>\n              {(api) =>\n                api().isHalf ? <IconHalf /> : api().isHighlighted ? <IconFull /> : <IconEmpty />\n              }\n            </RatingGroup.Item>\n          )}\n        </Index>\n      )}\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "InitialValue": "import { RatingGroup } from '@ark-ui/solid'\nimport { Index } from 'solid-js'\n\nconst InitialValue = () => (\n  <RatingGroup.Root count={5} value={2} readOnly>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {(api) => (\n        <Index each={api().items}>\n          {(index) => (\n            <RatingGroup.Item index={index()}>\n              {(api) =>\n                api().isHalf ? <IconHalf /> : api().isHighlighted ? <IconFull /> : <IconEmpty />\n              }\n            </RatingGroup.Item>\n          )}\n        </Index>\n      )}\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "Controlled": "import { RatingGroup } from '@ark-ui/solid'\nimport { Index, createSignal } from 'solid-js'\n\nconst Controlled = () => {\n  const [value, setValue] = createSignal(0)\n\n  return (\n    <RatingGroup.Root\n      count={5}\n      value={value()}\n      onValueChange={(details) => setValue(details.value)}\n      allowHalf\n    >\n      <RatingGroup.Label>Label</RatingGroup.Label>\n      <RatingGroup.Control>\n        {(api) => (\n          <Index each={api().items}>\n            {(index) => (\n              <RatingGroup.Item index={index()}>\n                {(api) =>\n                  api().isHalf ? <IconHalf /> : api().isHighlighted ? <IconFull /> : <IconEmpty />\n                }\n              </RatingGroup.Item>\n            )}\n          </Index>\n        )}\n      </RatingGroup.Control>\n    </RatingGroup.Root>\n  )\n}\n",
  "Disabled": "import { RatingGroup } from '@ark-ui/solid'\nimport { Index } from 'solid-js'\n\nconst Disabled = () => (\n  <RatingGroup.Root count={5} value={3} disabled>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {(api) => (\n        <Index each={api().items}>\n          {(index) => (\n            <RatingGroup.Item index={index()}>\n              {(api) => (api().isHighlighted ? <IconFull /> : <IconEmpty />)}\n            </RatingGroup.Item>\n          )}\n        </Index>\n      )}\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "ReadOnly": "import { RatingGroup } from '@ark-ui/solid'\nimport { Index } from 'solid-js'\n\nconst ReadOnly = () => (\n  <RatingGroup.Root count={5} value={3} readOnly>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {(api) => (\n        <Index each={api().items}>\n          {(index) => (\n            <RatingGroup.Item index={index()}>\n              {(api) => (api().isHighlighted ? <IconFull /> : <IconEmpty />)}\n            </RatingGroup.Item>\n          )}\n        </Index>\n      )}\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "FormUsage": "import { RatingGroup } from '@ark-ui/solid'\nimport { Index } from 'solid-js'\n\nconst FormUsage = () => (\n  <RatingGroup.Root name=\"my-rating\" count={5} value={3}>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {(api) => (\n        <Index each={api().items}>\n          {(index) => (\n            <RatingGroup.Item index={index()}>\n              {(api) => (api().isHighlighted ? <IconFull /> : <IconEmpty />)}\n            </RatingGroup.Item>\n          )}\n        </Index>\n      )}\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n"
}
