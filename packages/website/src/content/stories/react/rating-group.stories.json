{
  "Basic": "import { RatingGroup } from '@ark-ui/react'\n\nconst Basic = () => (\n  <RatingGroup.Root count={5} defaultValue={3}>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {({ items }) =>\n        items.map((item) => (\n          <RatingGroup.Item key={item} index={item}>\n            {({ isHighlighted }) => {\n              if (isHighlighted) return <IconFull />\n              return <IconEmpty />\n            }}\n          </RatingGroup.Item>\n        ))\n      }\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "HalfRatings": "import { RatingGroup } from '@ark-ui/react'\n\nconst HalfRatings = () => (\n  <RatingGroup.Root count={5} defaultValue={3} allowHalf>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {({ items }) =>\n        items.map((item) => (\n          <RatingGroup.Item key={item} index={item}>\n            {({ isHalf, isHighlighted }) => {\n              if (isHalf) return <IconHalf />\n              if (isHighlighted) return <IconFull />\n              return <IconEmpty />\n            }}\n          </RatingGroup.Item>\n        ))\n      }\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "InitialValue": "import { RatingGroup } from '@ark-ui/react'\n\nconst InitialValue = () => (\n  <RatingGroup.Root count={5} defaultValue={2} readOnly>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {({ items }) =>\n        items.map((item) => (\n          <RatingGroup.Item key={item} index={item}>\n            {({ isHighlighted }) => {\n              if (isHighlighted) return <IconFull />\n              return <IconEmpty />\n            }}\n          </RatingGroup.Item>\n        ))\n      }\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "Controlled": "import { RatingGroup } from '@ark-ui/react'\nimport { useState } from 'react'\n\nconst Controlled = () => {\n  const [value, setValue] = useState(0)\n\n  return (\n    <RatingGroup.Root\n      count={5}\n      value={value}\n      onValueChange={(details) => setValue(details.value)}\n      allowHalf\n    >\n      <RatingGroup.Label>Label</RatingGroup.Label>\n      <RatingGroup.Control>\n        {({ items }) =>\n          items.map((item) => (\n            <RatingGroup.Item key={item} index={item}>\n              {({ isHalf, isHighlighted }) => {\n                if (isHalf) return <IconHalf />\n                if (isHighlighted) return <IconFull />\n                return <IconEmpty />\n              }}\n            </RatingGroup.Item>\n          ))\n        }\n      </RatingGroup.Control>\n    </RatingGroup.Root>\n  )\n}\n",
  "Disabled": "import { RatingGroup } from '@ark-ui/react'\n\nconst Disabled = () => (\n  <RatingGroup.Root count={5} defaultValue={3} disabled>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {({ items }) =>\n        items.map((item) => (\n          <RatingGroup.Item key={item} index={item}>\n            {({ isHighlighted }) => {\n              if (isHighlighted) return <IconFull />\n              return <IconEmpty />\n            }}\n          </RatingGroup.Item>\n        ))\n      }\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "ReadOnly": "import { RatingGroup } from '@ark-ui/react'\n\nconst ReadOnly = () => (\n  <RatingGroup.Root count={5} defaultValue={3} readOnly>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {({ items }) =>\n        items.map((item) => (\n          <RatingGroup.Item key={item} index={item}>\n            {({ isHighlighted }) => {\n              if (isHighlighted) return <IconFull />\n              return <IconEmpty />\n            }}\n          </RatingGroup.Item>\n        ))\n      }\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n",
  "FormUsage": "import { RatingGroup } from '@ark-ui/react'\n\nconst FormUsage = () => (\n  <RatingGroup.Root name=\"my-rating\" count={5} defaultValue={3}>\n    <RatingGroup.Label>Label</RatingGroup.Label>\n    <RatingGroup.Control>\n      {({ items }) =>\n        items.map((item) => (\n          <RatingGroup.Item key={item} index={item}>\n            {({ isHighlighted }) => {\n              if (isHighlighted) return <IconFull />\n              return <IconEmpty />\n            }}\n          </RatingGroup.Item>\n        ))\n      }\n    </RatingGroup.Control>\n  </RatingGroup.Root>\n)\n"
}
