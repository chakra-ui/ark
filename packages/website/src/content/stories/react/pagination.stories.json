{
  "Basic": "import { Pagination } from '@ark-ui/react'\n\nconst Basic = () => (\n  <Pagination.Root count={5000} pageSize={10} siblingCount={2}>\n    {({ pages }) => (\n      <>\n        <Pagination.PrevTrigger>Previous Page</Pagination.PrevTrigger>\n        {pages.map((page, index) =>\n          page.type === 'page' ? (\n            <Pagination.Item key={index} {...page}>\n              {page.value}\n            </Pagination.Item>\n          ) : (\n            <Pagination.Ellipsis key={index} index={index}>\n              &#8230;\n            </Pagination.Ellipsis>\n          ),\n        )}\n        <Pagination.NextTrigger>Next Page</Pagination.NextTrigger>\n      </>\n    )}\n  </Pagination.Root>\n)\n",
  "Controlled": "import { Pagination } from '@ark-ui/react'\nimport { useState } from 'react'\n\nconst Controlled = () => {\n  const [currentPage, setCurrentPage] = useState(1)\n\n  return (\n    <Pagination.Root\n      count={5000}\n      pageSize={10}\n      siblingCount={2}\n      page={currentPage}\n      onPageChange={(details) => setCurrentPage(details.page)}\n    >\n      {({ pages }) => (\n        <>\n          <Pagination.PrevTrigger>Previous</Pagination.PrevTrigger>\n          {pages.map((page, index) =>\n            page.type === 'page' ? (\n              <Pagination.Item key={index} {...page}>\n                {page.value}\n              </Pagination.Item>\n            ) : (\n              <Pagination.Ellipsis key={index} index={index}>\n                &#8230;\n              </Pagination.Ellipsis>\n            ),\n          )}\n          <Pagination.NextTrigger>Next Page</Pagination.NextTrigger>\n        </>\n      )}\n    </Pagination.Root>\n  )\n}\n",
  "Customized": "import { Pagination } from '@ark-ui/react'\n\nconst Customized = () => (\n  <Pagination.Root\n    count={5000}\n    pageSize={20}\n    siblingCount={3}\n    dir=\"ltr\"\n    translations={{\n      nextTriggerLabel: 'Next',\n      prevTriggerLabel: 'Prev',\n      itemLabel: (details) => `Page ${details.page}`,\n    }}\n  >\n    {({ pages }) => (\n      <>\n        <Pagination.PrevTrigger>Previous</Pagination.PrevTrigger>\n        {pages.map((page, index) =>\n          page.type === 'page' ? (\n            <Pagination.Item key={index} {...page}>\n              {page.value}\n            </Pagination.Item>\n          ) : (\n            <Pagination.Ellipsis key={index} index={index}>\n              &#8230;\n            </Pagination.Ellipsis>\n          ),\n        )}\n        <Pagination.NextTrigger>Next Page</Pagination.NextTrigger>\n      </>\n    )}\n  </Pagination.Root>\n)\n"
}
