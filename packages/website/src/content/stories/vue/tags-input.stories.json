{
  "Basic": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { TagsInput } from '@ark-ui/vue'\n\nconst frameworks = ref(['React', 'Solid', 'Vue'])\n</script>\n\n<template>\n  <TagsInput.Root v-slot=\"api\">\n    <TagsInput.Label>Frameworks</TagsInput.Label>\n    <TagsInput.Control>\n      <TagsInput.Item\n        v-for=\"(value, index) in api.value\"\n        :key=\"index\"\n        :index=\"index\"\n        :value=\"value\"\n      >\n        <TagsInput.ItemPreview>\n          <TagsInput.ItemText>{{ value }}</TagsInput.ItemText>\n          <TagsInput.ItemDeleteTrigger>Delete</TagsInput.ItemDeleteTrigger>\n        </TagsInput.ItemPreview>\n        <TagsInput.ItemInput />\n      </TagsInput.Item>\n      <TagsInput.Input placeholder=\"Add Framework\" />\n      <TagsInput.ClearTrigger>Clear all</TagsInput.ClearTrigger>\n    </TagsInput.Control>\n  </TagsInput.Root>\n</template>\n",
  "InitialValue": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { TagsInput } from '@ark-ui/vue'\n\nconst frameworks = ref(['React', 'Solid', 'Vue'])\n</script>\n\n<template>\n  <TagsInput.Root v-slot=\"api\" v-model=\"frameworks\">\n    <TagsInput.Label>Frameworks</TagsInput.Label>\n    <TagsInput.Control>\n      <TagsInput.Item\n        v-for=\"(value, index) in api.value\"\n        :key=\"index\"\n        :index=\"index\"\n        :value=\"value\"\n      >\n        <TagsInput.ItemInput />\n        <TagsInput.ItemText>{{ value }}</TagsInput.ItemText>\n        <TagsInput.ItemDeleteTrigger>Delete</TagsInput.ItemDeleteTrigger>\n      </TagsInput.Item>\n      <TagsInput.Input placeholder=\"Add Framework\" />\n      <TagsInput.ClearTrigger>Clear all</TagsInput.ClearTrigger>\n    </TagsInput.Control>\n  </TagsInput.Root>\n</template>\n",
  "MaxWithOverflow": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { TagsInput } from '@ark-ui/vue'\n\nconst frameworks = ref(['React', 'Solid', 'Vue'])\n</script>\n\n<template>\n  <TagsInput.Root v-slot=\"api\" :max=\"3\" allowOverflow>\n    <TagsInput.Label>Frameworks</TagsInput.Label>\n    <TagsInput.Control>\n      <TagsInput.Item\n        v-for=\"(value, index) in api.value\"\n        :key=\"index\"\n        :index=\"index\"\n        :value=\"value\"\n      >\n        <TagsInput.ItemInput />\n        <TagsInput.ItemText>{{ value }}</TagsInput.ItemText>\n        <TagsInput.ItemDeleteTrigger>Delete</TagsInput.ItemDeleteTrigger>\n      </TagsInput.Item>\n      <TagsInput.Input placeholder=\"Add Framework\" />\n      <TagsInput.ClearTrigger>Clear all</TagsInput.ClearTrigger>\n    </TagsInput.Control>\n  </TagsInput.Root>\n</template>\n",
  "Validated": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { TagsInput } from '@ark-ui/vue'\n\nconst frameworks = ref(['React', 'Solid', 'Vue'])\n</script>\n\n<template>\n  <TagsInput.Root\n    v-slot=\"api\"\n    :validate=\"\n      (details) => {\n        return !details.value.includes(details.inputValue)\n      }\n    \"\n  >\n    <TagsInput.Label>Frameworks</TagsInput.Label>\n    <TagsInput.Control>\n      <TagsInput.Item\n        v-for=\"(value, index) in api.value\"\n        :key=\"index\"\n        :index=\"index\"\n        :value=\"value\"\n      >\n        <TagsInput.ItemInput />\n        <TagsInput.ItemText>{{ value }}</TagsInput.ItemText>\n        <TagsInput.ItemDeleteTrigger>Delete</TagsInput.ItemDeleteTrigger>\n      </TagsInput.Item>\n      <TagsInput.Input placeholder=\"Add Framework\" />\n      <TagsInput.ClearTrigger>Clear all</TagsInput.ClearTrigger>\n    </TagsInput.Control>\n  </TagsInput.Root>\n</template>\n",
  "BlurBehavior": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { TagsInput } from '@ark-ui/vue'\n\nconst frameworks = ref(['React', 'Solid', 'Vue'])\n</script>\n\n<template>\n  <TagsInput.Root v-slot=\"api\" blurBehavior=\"add\">\n    <TagsInput.Label>Frameworks</TagsInput.Label>\n    <TagsInput.Control>\n      <TagsInput.Item\n        v-for=\"(value, index) in api.value\"\n        :key=\"index\"\n        :index=\"index\"\n        :value=\"value\"\n      >\n        <TagsInput.ItemInput />\n        <TagsInput.ItemText>{{ value }}</TagsInput.ItemText>\n        <TagsInput.ItemDeleteTrigger>Delete</TagsInput.ItemDeleteTrigger>\n      </TagsInput.Item>\n      <TagsInput.Input placeholder=\"Add Framework\" />\n      <TagsInput.ClearTrigger>Clear all</TagsInput.ClearTrigger>\n    </TagsInput.Control>\n  </TagsInput.Root>\n</template>\n",
  "PasteBehavior": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { TagsInput } from '@ark-ui/vue'\n\nconst frameworks = ref(['React', 'Solid', 'Vue'])\n</script>\n\n<template>\n  <TagsInput.Root v-slot=\"api\" addOnPaste delimiter=\",\">\n    <TagsInput.Label>Frameworks</TagsInput.Label>\n    <TagsInput.Control>\n      <TagsInput.Item\n        v-for=\"(value, index) in api.value\"\n        :key=\"index\"\n        :index=\"index\"\n        :value=\"value\"\n      >\n        <TagsInput.ItemInput />\n        <TagsInput.ItemText>{{ value }}</TagsInput.ItemText>\n        <TagsInput.ItemDeleteTrigger>Delete</TagsInput.ItemDeleteTrigger>\n      </TagsInput.Item>\n      <TagsInput.Input placeholder=\"Add Framework\" />\n      <TagsInput.ClearTrigger>Clear all</TagsInput.ClearTrigger>\n    </TagsInput.Control>\n  </TagsInput.Root>\n</template>\n",
  "DisabledEditing": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { TagsInput } from '@ark-ui/vue'\n\nconst frameworks = ref(['React', 'Solid', 'Vue'])\n</script>\n\n<template>\n  <TagsInput.Root v-slot=\"api\" :allowEditTag=\"false\">\n    <TagsInput.Label>Frameworks</TagsInput.Label>\n    <TagsInput.Control>\n      <TagsInput.Item\n        v-for=\"(value, index) in api.value\"\n        :key=\"index\"\n        :index=\"index\"\n        :value=\"value\"\n      >\n        <TagsInput.ItemInput />\n        <TagsInput.ItemText>{{ value }}</TagsInput.ItemText>\n        <TagsInput.ItemDeleteTrigger>Delete</TagsInput.ItemDeleteTrigger>\n      </TagsInput.Item>\n      <TagsInput.Input placeholder=\"Add Framework\" />\n      <TagsInput.ClearTrigger>Clear all</TagsInput.ClearTrigger>\n    </TagsInput.Control>\n  </TagsInput.Root>\n</template>\n",
  "OnEvent": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { TagsInput } from '@ark-ui/vue'\n\nconst frameworks = ref(['React', 'Solid', 'Vue'])\n</script>\n\n<template>\n  <TagsInput.Root\n    v-slot=\"api\"\n    @value-change=\"\n      (details) => {\n        console.log('tags changed to:', details.value)\n      }\n    \"\n    @highlight-change=\"\n      (details) => {\n        console.log('highlighted tag:', details.highlightedValue)\n      }\n    \"\n    @value-invalid=\"\n      (details) => {\n        console.log('Invalid!', details.reason)\n      }\n    \"\n    :max=\"3\"\n    allowOverflow\n    :validate=\"\n      (details) => {\n        return !details.value.includes(details.inputValue)\n      }\n    \"\n  >\n    <TagsInput.Label>Frameworks</TagsInput.Label>\n    <TagsInput.Control>\n      <TagsInput.Item\n        v-for=\"(value, index) in api.value\"\n        :key=\"index\"\n        :index=\"index\"\n        :value=\"value\"\n      >\n        <TagsInput.ItemInput />\n        <TagsInput.ItemText>{{ value }}</TagsInput.ItemText>\n        <TagsInput.ItemDeleteTrigger>Delete</TagsInput.ItemDeleteTrigger>\n      </TagsInput.Item>\n      <TagsInput.Input placeholder=\"Add Framework\" />\n      <TagsInput.ClearTrigger>Clear all</TagsInput.ClearTrigger>\n    </TagsInput.Control>\n  </TagsInput.Root>\n</template>\n"
}
