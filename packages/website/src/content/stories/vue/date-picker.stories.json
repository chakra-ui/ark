{
  "Basic": "<script setup lang=\"ts\">\nimport { DatePicker } from '@ark-ui/vue'\n</script>\n\n<template>\n  <DatePicker.Root>\n    <DatePicker.Label>Label</DatePicker.Label>\n    <DatePicker.Control>\n      <DatePicker.Input />\n      <DatePicker.Trigger>ðŸ“…</DatePicker.Trigger>\n      <DatePicker.ClearTrigger>Clear</DatePicker.ClearTrigger>\n    </DatePicker.Control>\n    <Teleport to=\"body\">\n      <DatePicker.Positioner>\n        <DatePicker.Content>\n          <DatePicker.YearSelect />\n          <DatePicker.MonthSelect />\n          <DatePicker.View view=\"day\" #default=\"api\">\n            <DatePicker.ViewControl>\n              <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n              <DatePicker.ViewTrigger>\n                <DatePicker.RangeText />\n              </DatePicker.ViewTrigger>\n              <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n            </DatePicker.ViewControl>\n            <DatePicker.Table>\n              <DatePicker.TableHead>\n                <DatePicker.TableRow>\n                  <DatePicker.TableHeader v-for=\"(weekDay, id) in api.weekDays\" :key=\"id\">{{\n                    weekDay.short\n                  }}</DatePicker.TableHeader>\n                </DatePicker.TableRow>\n              </DatePicker.TableHead>\n              <DatePicker.TableBody>\n                <DatePicker.TableRow v-for=\"(week, id) in api.weeks\" :key=\"id\">\n                  <DatePicker.TableCell v-for=\"(day, id) in week\" :key=\"id\" :value=\"day\">\n                    <DatePicker.TableCellTrigger>{{ day.day }}</DatePicker.TableCellTrigger>\n                  </DatePicker.TableCell>\n                </DatePicker.TableRow>\n              </DatePicker.TableBody>\n            </DatePicker.Table>\n          </DatePicker.View>\n          <DatePicker.View view=\"month\" #default=\"api\">\n            <DatePicker.ViewControl>\n              <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n              <DatePicker.ViewTrigger>\n                <DatePicker.RangeText />\n              </DatePicker.ViewTrigger>\n              <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n            </DatePicker.ViewControl>\n            <DatePicker.Table>\n              <DatePicker.TableBody>\n                <DatePicker.TableRow\n                  v-for=\"(months, id) in api.getMonthsGrid({ columns: 4, format: 'short' })\"\n                  :key=\"id\"\n                >\n                  <DatePicker.TableCell\n                    v-for=\"(month, id) in months\"\n                    :key=\"id\"\n                    :value=\"month.value\"\n                  >\n                    <DatePicker.TableCellTrigger>{{ month.label }}</DatePicker.TableCellTrigger>\n                  </DatePicker.TableCell>\n                </DatePicker.TableRow>\n              </DatePicker.TableBody>\n            </DatePicker.Table>\n          </DatePicker.View>\n          <DatePicker.View view=\"year\" #default=\"api\">\n            <DatePicker.ViewControl>\n              <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n              <DatePicker.ViewTrigger>\n                <DatePicker.RangeText />\n              </DatePicker.ViewTrigger>\n              <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n            </DatePicker.ViewControl>\n            <DatePicker.Table>\n              <DatePicker.TableBody>\n                <DatePicker.TableRow\n                  v-for=\"(years, id) in api.getYearsGrid({ columns: 4 })\"\n                  :key=\"id\"\n                >\n                  <DatePicker.TableCell v-for=\"(year, id) in years\" :key=\"id\" :value=\"year.value\">\n                    <DatePicker.TableCellTrigger>{{ year.label }}</DatePicker.TableCellTrigger>\n                  </DatePicker.TableCell>\n                </DatePicker.TableRow>\n              </DatePicker.TableBody>\n            </DatePicker.Table>\n          </DatePicker.View>\n        </DatePicker.Content>\n      </DatePicker.Positioner>\n    </Teleport>\n  </DatePicker.Root>\n</template>\n",
  "Standalone": "<script setup lang=\"ts\">\nimport { DatePicker } from '@ark-ui/vue'\n</script>\n\n<template>\n  <DatePicker.Root open :close-on-select=\"false\">\n    <DatePicker.View view=\"day\" #default=\"api\">\n      <DatePicker.ViewControl>\n        <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n        <DatePicker.ViewTrigger>\n          <DatePicker.RangeText />\n        </DatePicker.ViewTrigger>\n        <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n      </DatePicker.ViewControl>\n      <DatePicker.Table>\n        <DatePicker.TableHead>\n          <DatePicker.TableRow>\n            <DatePicker.TableHeader v-for=\"(weekDay, id) in api.weekDays\" :key=\"id\">{{\n              weekDay.short\n            }}</DatePicker.TableHeader>\n          </DatePicker.TableRow>\n        </DatePicker.TableHead>\n        <DatePicker.TableBody>\n          <DatePicker.TableRow v-for=\"(week, id) in api.weeks\" :key=\"id\">\n            <DatePicker.TableCell v-for=\"(day, id) in week\" :key=\"id\" :value=\"day\">\n              <DatePicker.TableCellTrigger>{{ day.day }}</DatePicker.TableCellTrigger>\n            </DatePicker.TableCell>\n          </DatePicker.TableRow>\n        </DatePicker.TableBody>\n      </DatePicker.Table>\n    </DatePicker.View>\n  </DatePicker.Root>\n</template>\n"
}
