{
  "Basic": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Accordion } from '@ark-ui/vue'\n\nconst items = ref(['React', 'Solid', 'Vue'])\nconst value = ref(['React'])\n</script>\n\n<template>\n  <Accordion.Root>\n    <Accordion.Item v-for=\"item in items\" :key=\"item\" :value=\"item\">\n      <Accordion.ItemTrigger>{{ item }} trigger</Accordion.ItemTrigger>\n      <Accordion.ItemIndicator>Icon</Accordion.ItemIndicator>\n      <Accordion.ItemContent>{{ item }} content</Accordion.ItemContent>\n    </Accordion.Item>\n  </Accordion.Root>\n</template>\n",
  "Initial": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Accordion } from '@ark-ui/vue'\n\nconst items = ref(['React', 'Solid', 'Vue'])\nconst value = ref(['React'])\n</script>\n\n<template>\n  <Accordion.Root :modelValue=\"['Solid']\">\n    <Accordion.Item v-for=\"item in items\" :key=\"item\" :value=\"item\">\n      <Accordion.ItemTrigger>{{ item }} trigger</Accordion.ItemTrigger>\n      <Accordion.ItemContent>{{ item }} content</Accordion.ItemContent>\n    </Accordion.Item>\n  </Accordion.Root>\n</template>\n",
  "RenderProp": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Accordion } from '@ark-ui/vue'\n\nconst items = ref(['React', 'Solid', 'Vue'])\nconst value = ref(['React'])\n</script>\n\n<template>\n  <Accordion.Root>\n    <Accordion.Item v-for=\"item in items\" :key=\"item\" :value=\"item\" v-slot=\"{ isOpen }\">\n      <Accordion.ItemTrigger>{{ isOpen ? 'Close' : 'Open' }}</Accordion.ItemTrigger>\n      <Accordion.ItemContent>{{ item }} content</Accordion.ItemContent>\n    </Accordion.Item>\n  </Accordion.Root>\n</template>\n",
  "Collapsible": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Accordion } from '@ark-ui/vue'\n\nconst items = ref(['React', 'Solid', 'Vue'])\nconst value = ref(['React'])\n</script>\n\n<template>\n  <Accordion.Root collapsible>\n    <Accordion.Item v-for=\"item in items\" :key=\"item\" :value=\"item\">\n      <Accordion.ItemTrigger>{{ item }} trigger</Accordion.ItemTrigger>\n      <Accordion.ItemContent>{{ item }} content</Accordion.ItemContent>\n    </Accordion.Item>\n  </Accordion.Root>\n</template>\n",
  "Multiple": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Accordion } from '@ark-ui/vue'\n\nconst items = ref(['React', 'Solid', 'Vue'])\nconst value = ref(['React'])\n</script>\n\n<template>\n  <Accordion.Root multiple>\n    <Accordion.Item v-for=\"item in items\" :key=\"item\" :value=\"item\">\n      <Accordion.ItemTrigger>{{ item }} trigger</Accordion.ItemTrigger>\n      <Accordion.ItemContent>{{ item }} content</Accordion.ItemContent>\n    </Accordion.Item>\n  </Accordion.Root>\n</template>\n",
  "Controlled": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Accordion } from '@ark-ui/vue'\n\nconst items = ref(['React', 'Solid', 'Vue'])\nconst value = ref(['React'])\n</script>\n\n<template>\n  <Accordion.Root v-model=\"value\">\n    <Accordion.Item v-for=\"item in items\" :key=\"item\" :value=\"item\">\n      <Accordion.ItemTrigger>{{ item }} trigger</Accordion.ItemTrigger>\n      <Accordion.ItemContent>{{ item }} content</Accordion.ItemContent>\n    </Accordion.Item>\n  </Accordion.Root>\n</template>\n",
  "Vertical": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Accordion } from '@ark-ui/vue'\n\nconst items = ref(['React', 'Solid', 'Vue'])\nconst value = ref(['React'])\n</script>\n\n<template>\n  <Accordion.Root orientation=\"vertical\">\n    <Accordion.Item v-for=\"item in items\" :key=\"item\" :value=\"item\">\n      <Accordion.ItemTrigger>{{ item }} trigger</Accordion.ItemTrigger>\n      <Accordion.ItemContent>{{ item }} content</Accordion.ItemContent>\n    </Accordion.Item>\n  </Accordion.Root>\n</template>\n",
  "Disabled": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Accordion } from '@ark-ui/vue'\n\nconst items = ref(['React', 'Solid', 'Vue'])\nconst value = ref(['React'])\n</script>\n\n<template>\n  <Accordion.Root>\n    <Accordion.Item v-for=\"item in items\" :key=\"item\" :value=\"item\" :disabled=\"item === 'Solid'\">\n      <Accordion.ItemTrigger>{{ item }} trigger</Accordion.ItemTrigger>\n      <Accordion.ItemContent>{{ item }} content</Accordion.ItemContent>\n    </Accordion.Item>\n  </Accordion.Root>\n</template>\n"
}
