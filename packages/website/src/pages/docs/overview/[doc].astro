---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import DocsFooter from '~/components/navigation/docs-footer.astro'
import TableOfContent from '~/components/navigation/table-of-content.astro'
import PageHeader from '~/components/page-header.astro'
import { Article } from '~/components/ui/article'
import DocsLayout from '~/layouts/docs-layout.astro'

type Props = {
  entry: CollectionEntry<'docs'>
  docs: CollectionEntry<'docs'>[]
}

export async function getStaticPaths() {
  const priority = [
    'introduction',
    'getting-started',
    'as-child-prop',
    'styling',
    'animation',
    'changelog',
  ]

  const docs = await getCollection('docs')
  const sortedDocs = docs.sort((a, b) => priority.indexOf(a.data.id) - priority.indexOf(b.data.id))

  return docs
    .sort((a, b) => priority.indexOf(a.data.id) - priority.indexOf(b.data.id))
    .map((entry) => {
      const [doc] = entry.slug.split('/')
      return {
        params: { doc },
        props: { entry, docs: sortedDocs },
      }
    })
}

const { entry } = Astro.props
const { Content, headings } = await entry.render()

const pages = Astro.props.docs
---

<DocsLayout>
  <PageHeader component={entry} />
  <TableOfContent headings={headings} />
  <Article maxW="full">
    <Content />
  </Article>
  <DocsFooter pages={pages} currentPage={entry} basePath={`/docs/overview/`} />
</DocsLayout>
