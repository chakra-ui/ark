{
  "Basic": "import { Portal } from '@zag-js/react'\nimport {\n  DatePicker,\n  DatePickerClearTrigger,\n  DatePickerColumnHeader,\n  DatePickerContent,\n  DatePickerControl,\n  DatePickerDayCell,\n  DatePickerDayCellTrigger,\n  DatePickerGrid,\n  DatePickerInput,\n  DatePickerMonthCell,\n  DatePickerMonthCellTrigger,\n  DatePickerMonthSelect,\n  DatePickerNextTrigger,\n  DatePickerPositioner,\n  DatePickerPrevTrigger,\n  DatePickerRow,\n  DatePickerRowGroup,\n  DatePickerRowHeader,\n  DatePickerTrigger,\n  DatePickerViewTrigger,\n  DatePickerYearCell,\n  DatePickerYearCellTrigger,\n  DatePickerYearSelect,\n} from '@ark-ui/react'\n\nconst Basic = () => (\n  <DatePicker>\n    {(api) => (\n      <>\n        <DatePickerControl>\n          <span>View mode: {api.view}</span>\n          <DatePickerInput />\n          <DatePickerTrigger>ðŸ—“</DatePickerTrigger>\n          <DatePickerClearTrigger>Clear</DatePickerClearTrigger>\n        </DatePickerControl>\n        <Portal>\n          <DatePickerPositioner>\n            <DatePickerContent>\n              <DatePickerYearSelect />\n              <DatePickerMonthSelect />\n              <div>\n                <DatePickerPrevTrigger>Prev</DatePickerPrevTrigger>\n                <DatePickerViewTrigger>\n                  {api.view === 'day' && api.visibleRangeText.start}\n                  {api.view === 'month' && api.visibleRange.start.year}\n                  {api.view === 'year' && `${api.getDecade().start} - ${api.getDecade().end}`}\n                </DatePickerViewTrigger>\n                <DatePickerNextTrigger>Next</DatePickerNextTrigger>\n              </div>\n              {api.view === 'day' && (\n                <DatePickerGrid>\n                  <DatePickerRowHeader>\n                    {api.weekDays.map((day, i) => (\n                      <DatePickerColumnHeader key={i} aria-label={day.long}>\n                        {day.narrow}\n                      </DatePickerColumnHeader>\n                    ))}\n                  </DatePickerRowHeader>\n                  <DatePickerRowGroup>\n                    {api.weeks.map((week, id) => (\n                      <DatePickerRow key={id}>\n                        {week.map((day, id) => (\n                          <DatePickerDayCell key={id} value={day}>\n                            <DatePickerDayCellTrigger>{day.day}</DatePickerDayCellTrigger>\n                          </DatePickerDayCell>\n                        ))}\n                      </DatePickerRow>\n                    ))}\n                  </DatePickerRowGroup>\n                </DatePickerGrid>\n              )}\n              {api.view === 'month' && (\n                <DatePickerGrid>\n                  <DatePickerRowGroup>\n                    {api.getMonthsGrid({ columns: 4, format: 'short' }).map((months, row) => (\n                      <DatePickerRow key={row}>\n                        {months.map((month, index) => (\n                          <DatePickerMonthCell key={index} value={month.value}>\n                            <DatePickerMonthCellTrigger>{month.label}</DatePickerMonthCellTrigger>\n                          </DatePickerMonthCell>\n                        ))}\n                      </DatePickerRow>\n                    ))}\n                  </DatePickerRowGroup>\n                </DatePickerGrid>\n              )}\n              {api.view === 'year' && (\n                <DatePickerGrid>\n                  <DatePickerRowGroup>\n                    {api.getYearsGrid({ columns: 4 }).map((years, row) => (\n                      <DatePickerRow key={row}>\n                        {years.map((year, index) => (\n                          <DatePickerYearCell key={index} value={year.value}>\n                            <DatePickerYearCellTrigger>{year.label}</DatePickerYearCellTrigger>\n                          </DatePickerYearCell>\n                        ))}\n                      </DatePickerRow>\n                    ))}\n                  </DatePickerRowGroup>\n                </DatePickerGrid>\n              )}\n            </DatePickerContent>\n          </DatePickerPositioner>\n        </Portal>\n      </>\n    )}\n  </DatePicker>\n)",
  "RangeWithSingleGrid": "import { Portal } from '@zag-js/react'\nimport {\n  DatePicker,\n  DatePickerClearTrigger,\n  DatePickerColumnHeader,\n  DatePickerContent,\n  DatePickerControl,\n  DatePickerDayCell,\n  DatePickerDayCellTrigger,\n  DatePickerGrid,\n  DatePickerInput,\n  DatePickerMonthCell,\n  DatePickerMonthCellTrigger,\n  DatePickerMonthSelect,\n  DatePickerNextTrigger,\n  DatePickerPositioner,\n  DatePickerPrevTrigger,\n  DatePickerRow,\n  DatePickerRowGroup,\n  DatePickerRowHeader,\n  DatePickerTrigger,\n  DatePickerViewTrigger,\n  DatePickerYearCell,\n  DatePickerYearCellTrigger,\n  DatePickerYearSelect,\n} from '@ark-ui/react'\n\nconst RangeWithSingleGrid = () => (\n  <DatePicker selectionMode=\"range\">\n    {(api) => (\n      <>\n        <DatePickerControl>\n          <span>View mode: {api.view}</span>\n          <DatePickerInput />\n          <DatePickerTrigger>ðŸ—“</DatePickerTrigger>\n          <DatePickerClearTrigger>Clear</DatePickerClearTrigger>\n        </DatePickerControl>\n        <Portal>\n          <DatePickerPositioner>\n            <DatePickerContent>\n              <DatePickerYearSelect />\n              <DatePickerMonthSelect />\n              <div>\n                <DatePickerPrevTrigger>Prev</DatePickerPrevTrigger>\n                <DatePickerViewTrigger>\n                  {api.view === 'day' && api.visibleRangeText.start}\n                  {api.view === 'month' && api.visibleRange.start.year}\n                  {api.view === 'year' && `${api.getDecade().start} - ${api.getDecade().end}`}\n                </DatePickerViewTrigger>\n                <DatePickerNextTrigger>Next</DatePickerNextTrigger>\n              </div>\n              {api.view === 'day' && (\n                <DatePickerGrid>\n                  <DatePickerRowHeader>\n                    {api.weekDays.map((day, i) => (\n                      <DatePickerColumnHeader key={i} aria-label={day.long}>\n                        {day.narrow}\n                      </DatePickerColumnHeader>\n                    ))}\n                  </DatePickerRowHeader>\n                  <DatePickerRowGroup>\n                    {api.weeks.map((week, id) => (\n                      <DatePickerRow key={id}>\n                        {week.map((day, id) => (\n                          <DatePickerDayCell key={id} value={day}>\n                            <DatePickerDayCellTrigger>{day.day}</DatePickerDayCellTrigger>\n                          </DatePickerDayCell>\n                        ))}\n                      </DatePickerRow>\n                    ))}\n                  </DatePickerRowGroup>\n                </DatePickerGrid>\n              )}\n              {api.view === 'month' && (\n                <DatePickerGrid>\n                  <DatePickerRowGroup>\n                    {api.getMonthsGrid({ columns: 4, format: 'short' }).map((months, row) => (\n                      <DatePickerRow key={row}>\n                        {months.map((month, index) => (\n                          <DatePickerMonthCell key={index} value={month.value}>\n                            <DatePickerMonthCellTrigger>{month.label}</DatePickerMonthCellTrigger>\n                          </DatePickerMonthCell>\n                        ))}\n                      </DatePickerRow>\n                    ))}\n                  </DatePickerRowGroup>\n                </DatePickerGrid>\n              )}\n              {api.view === 'year' && (\n                <DatePickerGrid>\n                  <DatePickerRowGroup>\n                    {api.getYearsGrid({ columns: 4 }).map((years, row) => (\n                      <DatePickerRow key={row}>\n                        {years.map((year, index) => (\n                          <DatePickerYearCell key={index} value={year.value}>\n                            <DatePickerYearCellTrigger>{year.label}</DatePickerYearCellTrigger>\n                          </DatePickerYearCell>\n                        ))}\n                      </DatePickerRow>\n                    ))}\n                  </DatePickerRowGroup>\n                </DatePickerGrid>\n              )}\n            </DatePickerContent>\n          </DatePickerPositioner>\n        </Portal>\n      </>\n    )}\n  </DatePicker>\n)",
  "RangeWithTwoGrids": "import { Portal } from '@zag-js/react'\nimport {\n  DatePicker,\n  DatePickerClearTrigger,\n  DatePickerColumnHeader,\n  DatePickerContent,\n  DatePickerControl,\n  DatePickerDayCell,\n  DatePickerDayCellTrigger,\n  DatePickerGrid,\n  DatePickerInput,\n  DatePickerMonthCell,\n  DatePickerMonthCellTrigger,\n  DatePickerMonthSelect,\n  DatePickerNextTrigger,\n  DatePickerPositioner,\n  DatePickerPrevTrigger,\n  DatePickerRow,\n  DatePickerRowGroup,\n  DatePickerRowHeader,\n  DatePickerTrigger,\n  DatePickerViewTrigger,\n  DatePickerYearCell,\n  DatePickerYearCellTrigger,\n  DatePickerYearSelect,\n} from '@ark-ui/react'\n\nconst RangeWithTwoGrids = () => (\n  <DatePicker selectionMode=\"range\" numOfMonths={2}>\n    {(api) => {\n      const offset = api.getOffset(1)\n      return (\n        <>\n          <DatePickerControl>\n            <span>View mode: {api.view}</span>\n            <DatePickerInput />\n            <DatePickerTrigger>ðŸ—“</DatePickerTrigger>\n            <DatePickerClearTrigger>Clear</DatePickerClearTrigger>\n          </DatePickerControl>\n          <Portal>\n            <DatePickerPositioner>\n              <DatePickerContent>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <DatePickerPrevTrigger>Prev</DatePickerPrevTrigger>\n                  <time>{api.visibleRangeText.start}</time>\n                  <time>{api.visibleRangeText.end}</time>\n                  <DatePickerNextTrigger>Next</DatePickerNextTrigger>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', gap: '24px' }}>\n                  <DatePickerGrid>\n                    <DatePickerRowHeader>\n                      {api.weekDays.map((day, i) => (\n                        <DatePickerColumnHeader key={i} aria-label={day.long}>\n                          {day.narrow}\n                        </DatePickerColumnHeader>\n                      ))}\n                    </DatePickerRowHeader>\n                    <DatePickerRowGroup>\n                      {api.weeks.map((week, id) => (\n                        <DatePickerRow key={id}>\n                          {week.map((day, id) => (\n                            <DatePickerDayCell key={id} value={day}>\n                              <DatePickerDayCellTrigger>{day.day}</DatePickerDayCellTrigger>\n                            </DatePickerDayCell>\n                          ))}\n                        </DatePickerRow>\n                      ))}\n                    </DatePickerRowGroup>\n                  </DatePickerGrid>\n\n                  <DatePickerGrid>\n                    <DatePickerRowHeader>\n                      {api.weekDays.map((day, i) => (\n                        <DatePickerColumnHeader key={i} aria-label={day.long}>\n                          {day.narrow}\n                        </DatePickerColumnHeader>\n                      ))}\n                    </DatePickerRowHeader>\n                    <DatePickerRowGroup>\n                      {offset.weeks.map((week, id) => (\n                        <DatePickerRow key={id}>\n                          {week.map((day, id) => (\n                            <DatePickerDayCell key={id} value={day} offset={offset}>\n                              <DatePickerDayCellTrigger>{day.day}</DatePickerDayCellTrigger>\n                            </DatePickerDayCell>\n                          ))}\n                        </DatePickerRow>\n                      ))}\n                    </DatePickerRowGroup>\n                  </DatePickerGrid>\n                </div>\n              </DatePickerContent>\n            </DatePickerPositioner>\n          </Portal>\n        </>\n      )\n    }}\n  </DatePicker>\n)"
}
